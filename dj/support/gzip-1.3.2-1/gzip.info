This is gzip.info, produced by makeinfo version 4.0 from gzip.texi.

INFO-DIR-SECTION Utilities
START-INFO-DIR-ENTRY
* Gzip: (gzip).                 The gzip command for compressing files.
END-INFO-DIR-ENTRY

   This file documents the the GNU `gzip' command for compressing files.

   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.
Copyright (C) 1992-1993 Jean-loup Gailly

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided that
the entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by the Foundation.


File: gzip.info,  Node: Top,  Up: (dir)

   This file documents the `gzip' command to compress files.

* Menu:

* Overview::		Preliminary information.
* Sample::		Sample output from `gzip'.
* Invoking gzip::	How to run `gzip'.
* Advanced usage::	Concatenated files.
* Environment::		The `GZIP' environment variable
* Tapes::               Using `gzip' on tapes.
* Problems::		Reporting bugs.
* Concept Index::	Index of concepts.


File: gzip.info,  Node: Overview,  Next: Sample,  Up: Top

Overview
********

   `gzip' reduces the size of the named files using Lempel-Ziv coding
(LZ77).  Whenever possible, each file is replaced by one with the
extension `.gz', while keeping the same ownership modes, access and
modification times.  (The default extension is `-gz' for VMS, `z' for
MSDOS, OS/2 FAT and Atari.)  If no files are specified or if a file
name is "-", the standard input is compressed to the standard output.
`gzip' will only attempt to compress regular files.  In particular, it
will ignore symbolic links.

   If the new file name is too long for its file system, `gzip'
truncates it.  `gzip' attempts to truncate only the parts of the file
name longer than 3 characters.  (A part is delimited by dots.) If the
name consists of small parts only, the longest parts are truncated.
For example, if file names are limited to 14 characters, gzip.msdos.exe
is compressed to gzi.msd.exe.gz.  Names are not truncated on systems
which do not have a limit on file name length.

   By default, `gzip' keeps the original file name and timestamp in the
compressed file. These are used when decompressing the file with the
`-N' option. This is useful when the compressed file name was truncated
or when the time stamp was not preserved after a file transfer.

   Compressed files can be restored to their original form using `gzip
-d' or `gunzip' or `zcat'.  If the original name saved in the
compressed file is not suitable for its file system, a new name is
constructed from the original one to make it legal.

   `gunzip' takes a list of files on its command line and replaces each
file whose name ends with `.gz', `.z', `.Z', `-gz', `-z' or `_z' and
which begins with the correct magic number with an uncompressed file
without the original extension.  `gunzip' also recognizes the special
extensions `.tgz' and `.taz' as shorthands for `.tar.gz' and `.tar.Z'
respectively. When compressing, `gzip' uses the `.tgz' extension if
necessary instead of truncating a file with a `.tar' extension.

   `gunzip' can currently decompress files created by `gzip', `zip',
`compress' or `pack'. The detection of the input format is automatic.
When using the first two formats, `gunzip' checks a 32 bit CRC (cyclic
redundancy check). For `pack', `gunzip' checks the uncompressed length.
The `compress' format was not designed to allow consistency checks.
However `gunzip' is sometimes able to detect a bad `.Z' file. If you
get an error when uncompressing a `.Z' file, do not assume that the
`.Z' file is correct simply because the standard `uncompress' does not
complain.  This generally means that the standard `uncompress' does not
check its input, and happily generates garbage output.  The SCO
`compress -H' format (`lzh' compression method) does not include a CRC
but also allows some consistency checks.

   Files created by `zip' can be uncompressed by `gzip' only if they
have a single member compressed with the 'deflation' method. This
feature is only intended to help conversion of `tar.zip' files to the
`tar.gz' format. To extract `zip' files with several members, use
`unzip' instead of `gunzip'.

   `zcat' is identical to `gunzip -c'.  `zcat' uncompresses either a
list of files on the command line or its standard input and writes the
uncompressed data on standard output.  `zcat' will uncompress files
that have the correct magic number whether they have a `.gz' suffix or
not.

   `gzip' uses the Lempel-Ziv algorithm used in `zip' and PKZIP.  The
amount of compression obtained depends on the size of the input and the
distribution of common substrings.  Typically, text such as source code
or English is reduced by 60-70%.  Compression is generally much better
than that achieved by LZW (as used in `compress'), Huffman coding (as
used in `pack'), or adaptive Huffman coding (`compact').

   Compression is always performed, even if the compressed file is
slightly larger than the original. The worst case expansion is a few
bytes for the `gzip' file header, plus 5 bytes every 32K block, or an
expansion ratio of 0.015% for large files. Note that the actual number
of used disk blocks almost never increases. `gzip' preserves the mode,
ownership and timestamps of files when compressing or decompressing.

   The `gzip' file format is specified in P. Deutsch, GZIP file format
specification version 4.3, Internet RFC 1952
(ftp://ftp.isi.edu/in-notes/rfc1952.txt) (May 1996).  The `zip'
deflation format is specified in P. Deutsch, DEFLATE Compressed Data
Format Specification version 1.3, Internet RFC 1951
(ftp://ftp.isi.edu/in-notes/rfc1951.txt) (May 1996).


File: gzip.info,  Node: Sample,  Next: Invoking gzip,  Prev: Overview,  Up: Top

Sample Output
*************

   Here are some realistic examples of running `gzip'.

   This is the output of the command `gzip -h':

     gzip 1.3
     (1999-12-21)
     usage: gzip [-cdfhlLnNrtvV19] [-S suffix] [file ...]
      -c --stdout      write on standard output, keep original files unchanged
      -d --decompress  decompress
      -f --force       force overwrite of output file and compress links
      -h --help        give this help
      -l --list        list compressed file contents
      -L --license     display software license
      -n --no-name     do not save or restore the original name and time stamp
      -N --name        save or restore the original name and time stamp
      -q --quiet       suppress all warnings
      -r --recursive   operate recursively on directories
      -S .suf  --suffix .suf     use suffix .suf on compressed files
      -t --test        test compressed file integrity
      -v --verbose     verbose mode
      -V --version     display version number
      -1 --fast        compress faster
      -9 --best        compress better
      file...          files to (de)compress. If none given, use standard input.
     Report bugs to <bug-gzip@gnu.org>.

   This is the output of the command `gzip -v texinfo.tex':

     texinfo.tex:             69.7% -- replaced with texinfo.tex.gz

   The following command will find all `gzip' files in the current
directory and subdirectories, and extract them in place without
destroying the original:

     find . -name '*.gz' -print | sed 's/^\(.*\)[.]gz$/gunzip < "&" > "\1"/' | sh


File: gzip.info,  Node: Invoking gzip,  Next: Advanced usage,  Prev: Sample,  Up: Top

Invoking `gzip'
***************

   The format for running the `gzip' program is:

     gzip OPTION ...

   `gzip' supports the following options:

`--stdout'
`--to-stdout'
`-c'
     Write output on standard output; keep original files unchanged.
     If there are several input files, the output consists of a
     sequence of independently compressed members. To obtain better
     compression, concatenate all input files before compressing them.

`--decompress'
`--uncompress'
`-d'
     Decompress.

`--force'
`-f'
     Force compression or decompression even if the file has multiple
     links or the corresponding file already exists, or if the
     compressed data is read from or written to a terminal. If the
     input data is not in a format recognized by `gzip', and if the
     option `--stdout' is also given, copy the input data without
     change to the standard output: let `zcat' behave as `cat'. If `-f'
     is not given, and when not running in the background, `gzip'
     prompts to verify whether an existing file should be overwritten.

`--help'
`-h'
     Print an informative help message describing the options then quit.

`--list'
`-l'
     For each compressed file, list the following fields:

          compressed size: size of the compressed file
          uncompressed size: size of the uncompressed file
          ratio: compression ratio (0.0% if unknown)
          uncompressed_name: name of the uncompressed file

     The uncompressed size is given as `-1' for files not in `gzip'
     format, such as compressed `.Z' files. To get the uncompressed
     size for such a file, you can use:

          zcat file.Z | wc -c

     In combination with the `--verbose' option, the following fields
     are also displayed:

          method: compression method (deflate,compress,lzh,pack)
          crc: the 32-bit CRC of the uncompressed data
          date & time: time stamp for the uncompressed file

     The crc is given as ffffffff for a file not in gzip format.

     With `--verbose', the size totals and compression ratio for all
     files is also displayed, unless some sizes are unknown. With
     `--quiet', the title and totals lines are not displayed.

     The `gzip' format represents the the input size modulo 2^32, so
     the uncompressed size and compression ratio are listed incorrectly
     for uncompressed files 4 GB and larger. To work around this
     problem, you can use the following command to discover a large
     uncompressed file's true size:

          zcat file.gz | wc -c

`--license'
`-L'
     Display the `gzip' license then quit.

`--no-name'
`-n'
     When compressing, do not save the original file name and time
     stamp by default. (The original name is always saved if the name
     had to be truncated.) When decompressing, do not restore the
     original file name if present (remove only the `gzip' suffix from
     the compressed file name) and do not restore the original time
     stamp if present (copy it from the compressed file). This option
     is the default when decompressing.

`--name'
`-N'
     When compressing, always save the original file name and time
     stamp; this is the default. When decompressing, restore the
     original file name and time stamp if present. This option is
     useful on systems which have a limit on file name length or when
     the time stamp has been lost after a file transfer.

`--quiet'
`-q'
     Suppress all warning messages.

`--recursive'
`-r'
     Travel the directory structure recursively. If any of the file
     names specified on the command line are directories, `gzip' will
     descend into the directory and compress all the files it finds
     there (or decompress them in the case of `gunzip').

`--suffix SUF'
`-S SUF'
     Use suffix `SUF' instead of `.gz'. Any suffix can be given, but
     suffixes other than `.z' and `.gz' should be avoided to avoid
     confusion when files are transferred to other systems.  A null
     suffix forces gunzip to try decompression on all given files
     regardless of suffix, as in:

          gunzip -S "" *        (*.* for MSDOS)

     Previous versions of gzip used the `.z' suffix. This was changed to
     avoid a conflict with `pack'.

`--test'
`-t'
     Test. Check the compressed file integrity.

`--verbose'
`-v'
     Verbose. Display the name and percentage reduction for each file
     compressed.

`--version'
`-V'
     Version. Display the version number and compilation options, then
     quit.

`--fast'
`--best'
`-N'
     Regulate the speed of compression using the specified digit N,
     where `-1' or `--fast' indicates the fastest compression method
     (less compression) and `--best' or `-9' indicates the slowest
     compression method (optimal compression).  The default compression
     level is `-6' (that is, biased towards high compression at expense
     of speed).


File: gzip.info,  Node: Advanced usage,  Next: Environment,  Prev: Invoking gzip,  Up: Top

Advanced usage
**************

   Multiple compressed files can be concatenated. In this case,
`gunzip' will extract all members at once. If one member is damaged,
other members might still be recovered after removal of the damaged
member. Better compression can be usually obtained if all members are
decompressed and then recompressed in a single step.

   This is an example of concatenating `gzip' files:

     gzip -c file1  > foo.gz
     gzip -c file2 >> foo.gz

   Then

     gunzip -c foo

   is equivalent to

     cat file1 file2

   In case of damage to one member of a `.gz' file, other members can
still be recovered (if the damaged member is removed). However, you can
get better compression by compressing all members at once:

     cat file1 file2 | gzip > foo.gz

   compresses better than

     gzip -c file1 file2 > foo.gz

   If you want to recompress concatenated files to get better
compression, do:

     zcat old.gz | gzip > new.gz

   If a compressed file consists of several members, the uncompressed
size and CRC reported by the `--list' option applies to the last member
only. If you need the uncompressed size for all members, you can use:

     zcat file.gz | wc -c

   If you wish to create a single archive file with multiple members so
that members can later be extracted independently, use an archiver such
as `tar' or `zip'. GNU `tar' supports the `-z' option to invoke `gzip'
transparently. `gzip' is designed as a complement to `tar', not as a
replacement.


File: gzip.info,  Node: Environment,  Next: Tapes,  Prev: Advanced usage,  Up: Top

Environment
***********

   The environment variable `GZIP' can hold a set of default options for
`gzip'.  These options are interpreted first and can be overwritten by
explicit command line parameters.  For example:

     for sh:    GZIP="-8v --name"; export GZIP
     for csh:   setenv GZIP "-8v --name"
     for MSDOS: set GZIP=-8v --name

   On Vax/VMS, the name of the environment variable is `GZIP_OPT', to
avoid a conflict with the symbol set for invocation of the program.


File: gzip.info,  Node: Tapes,  Next: Problems,  Prev: Environment,  Up: Top

Using `gzip' on tapes
*********************

   When writing compressed data to a tape, it is generally necessary to
pad the output with zeroes up to a block boundary. When the data is
read and the whole block is passed to `gunzip' for decompression,
`gunzip' detects that there is extra trailing garbage after the
compressed data and emits a warning by default if the garbage contains
nonzero bytes. You have to use the `--quiet' option to suppress the
warning. This option can be set in the `GZIP' environment variable, as
in:

     for sh:    GZIP="-q"  tar -xfz --block-compress /dev/rst0
     for csh:   (setenv GZIP "-q"; tar -xfz --block-compress /dev/rst0)

   In the above example, `gzip' is invoked implicitly by the `-z'
option of GNU `tar'.  Make sure that the same block size (`-b' option
of `tar') is used for reading and writing compressed data on tapes.
(This example assumes you are using the GNU version of `tar'.)


File: gzip.info,  Node: Problems,  Next: Concept Index,  Prev: Tapes,  Up: Top

Reporting Bugs
**************

   If you find a bug in `gzip', please send electronic mail to
<bug-gzip@gnu.org>.  Include the version number, which you can find by
running `gzip -V'.  Also include in your message the hardware and
operating system, the compiler used to compile `gzip', a description of
the bug behavior, and the input to `gzip' that triggered the bug.


File: gzip.info,  Node: Concept Index,  Prev: Problems,  Up: Top

Concept Index
*************

* Menu:

* bugs:                                  Problems.
* concatenated files:                    Advanced usage.
* Environment:                           Environment.
* invoking:                              Invoking gzip.
* options:                               Invoking gzip.
* overview:                              Overview.
* sample:                                Sample.
* tapes:                                 Tapes.



Tag Table:
Node: Top1050
Node: Overview1482
Node: Sample6128
Node: Invoking gzip7789
Node: Advanced usage12770
Node: Environment14359
Node: Tapes14927
Node: Problems15941
Node: Concept Index16393

End Tag Table
