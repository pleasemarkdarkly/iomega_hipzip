<?php

$pagetitle = "Metadata";
include("startpage.php");

?>

<p class="Body1">In the Dharma SDK, <span class="Module">Metadata</span> objects are associated with individual tracks on a data source. The interface for <span class="Module">Metadata</span> objects is generic, treating all metadata as key/value pairs in an associative array.</p>

<p class="Body1">
Your application can use <span class="Module">Metadata</span> objects to display information about a track, search for information, create catalogs, or whatever else you want. Your application can define a default <span class="Module">Metadata</span> creation function for the <span class="Module">Media Player</span>. The <span class="Module">Content Manager</span> may provide a <span class="Module">Metadata</span> object whenever a <span class="Module">Data Source</span> performs certain types of content enumeration. In both cases, the <span class="Module">Metadata</span> object is populated with information in the file decoded by the <span class="Module">Codec</span>. 
</p>
<p class="Body1">
If you don't want to use metadata, you need to specify a Single-Pass refresh mode for content enumeration, and set the Media Player metadata creation function to null (the default setting).
</p>
<?= picture("IMetadataClass.gif", "IMetadata Class Diagram"); ?>

<p class="Body1">
The <span class="Code">IMetadata</span> class is primarily used by <span class="Module">Codec</span> objects to populate <span class="Module">Metadata</span> objects. It provides methods for accessing any attribute by ID. Metadata attributes are designed as key/value pairs&mdash;you provide a key to set or get the value. Concrete extensions of this class provide other methods to access the data directly.
</p>


<?= head("","Metadata Object Lifecycle",3); ?>
<p class="Body1">
Metadata objects are created at two different times:
</p>
<ol>
	<li>By the <span class="Module">Content Manager</span> during content enumeration; and</li>
	<li>By the <span class="Module">Media Player</span> when a new track is selected.</li>
</ol>

<?= head("","Content Manager Metadata objects",4); ?>

<p class="Body1">
During content enumeration, the <span class="Module">Data Source</span> requests a <span class="Module">Metadata</span> object from the <span class="Module">Content Manager</span> to pass to the <span class="Module">Codec</span>. The <span class="Module">Content Manager</span> owns the <span class="Module">Metadata</span> object, and is responsible for creating, destroying, and storing it. <span class="Module">Metadata</span> objects are not requested during a single-pass enumeration, or the first pass of a double-pass enumeration.
</p>
<p class="Body1">
See <?= crossref("aContentEnumeration", "Content Enumeration"); ?> for more information about content enumeration modes.

</p>

<?= head("","Media Player Metadata objects",4); ?>


<p class="Body1">
When the <span class="Module">Media Player</span> sets a new track, it gets an input stream from the data source and passes it to the <span class="Module">Codec</span>. Your application can pass a default metadata creation function into the <span class="Module">Media Player</span> (<span class="Code">CMediaPlayer::SetCreateMetadataFunction()</span>). If you pass a function to the media player with this method, the media player will call whatever function you provide, expecting an IMetadata object in return. This object will then be passed to the <span class="Module">Codec</span> for data population, and finally, sent to the Event Queue.
</p>
<p class="Body1">
Your application might use the <span class="Module">Metadata</span> object created by the media player for displaying information about the current track on the user interface. 
</p>
<p class="Body1">
When your application has finished using the <span class="Module">Metadata</span> object from the <span class="Module">Media Player</span>, it can pass the event to the default event handler for destruction. If you do not use this event handler, you will have to destroy the object yourself.
</p>

<p class="Body1">
See <?= crossref("cIMetadata", "IMetadata"); ?> for more information about the specific <span class="Module">Metadata</span> objects provided in the SDK, and implementing your own metadata objects.
</p>
<?php

if (!$subpage)
{
include("endpage.php");
}
?>