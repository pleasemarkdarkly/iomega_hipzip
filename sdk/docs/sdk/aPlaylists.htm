<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
	<title>Playlists</title>

<SCRIPT LANGUAGE="JavaScript" SRC="io.js"></SCRIPT>
<link rel="STYLESHEET" type="text/css" href="iObjectsStyle.css">
</head>

<body lang=EN-US link=blue vlink=purple>
<table width="100%" >
<tr><td align="left" width="33%"><a href="aContentManager.htm" title='Content Manager'><img src='images/previous.gif' width=78 height=10 border='0'></a></td><td align="center" width="33%">
<SCRIPT LANGUAGE="JavaScript">
   if (parent.frames.length>1){
       document.write('<A HREF="JavaScript:SwitchView(0);"><img src="images/pagevw.gif" width=49 height=10 border="0"></A>');
   }else{
       document.write('<A HREF="JavaScript:SwitchView(1);"><img src="images/normalvw.gif" width=60 height=8 border="0"></A>');
   }
</SCRIPT>
</td><td align="right" width="33%">
<a href="aPlayManager.htm" title='Play Manager'><img src='images/next.gif' width=60 height=10 border='0'></a></td></tr>
</table><h2
><a name='aPlaylists'>Playlists</a></h2
><table cellpadding=5>
<tr><td></td><td>

<p class="Body1">A Playlist is an object representing a sequence of tracks. There are actually two sequences in each playlist: the normal indexed sequence, and the random sequence. When the Play Manager requests the next track from the Playlist object, it specifies a Playlist Mode that indicates whether to get the next track in the series, or the next random track.</p>
<p class="Body1">The Playlist Mode may be one of the following:</p>
<ul>
	<li>NORMAL &ndash; use the normal sequence when determining the next track.</li>
	<li>RANDOM &ndash; use the random sequence when determining the next track.</li>
	<li>REPEAT_ALL &ndash; use the normal sequence when determining the next track. When the current track is the last playlist entry, the next track becomes the first playlist entry.</li>
	<li>REPEAT_RANDOM &ndash; use the random sequence when determining the next track. If the current track is the last entry in the random sequence, use the first entry in the random sequence as the next track.</li>
	<li>REPEAT_TRACK &ndash; use the current track as the next track.</li>
</ul>

</td></tr>
<tr><td colspan=2><p class='PictureWide'><img src='images/image010.gif' alt='Playlist Behavior' width="700" height="444"></p></td></tr>
				<tr><td></td><td>

</td></tr>
<tr valign='top'><td><h3><a name='aPlaylistFormatManager'>Playlist Format Manager</a></h3></td>
				<td>


<p class="Body1">The CPlaylistFormatManager class 

maintains a list of registered playlist formats available in the system, and
provides functions for saving and loading playlists to and from data streams.
New playlist formats can be added through a registration interface.
Two playlist formats come with the SDK: the Dadio playlist format (DPL)
and Winamp's M3U format.
</p>

</td></tr>
<tr valign='top'><td><h4><a name=''>Loading and saving playlists</a></h4></td>
				<td><p class="Body1">
To load or save a playlist, at least three pieces of information are needed:
the playlist format ID, the URL to save/load the playlist to/from, and a
pointer to the IPlaylist to save/load.  The playlist format ID can be found
by either calling the FindPlaylistFormat function, which will return an ID
based on filename extension, or by using the playlist format ID stored in a
content manager's playlist content record.

</p>
<p class="Body1">
The entries found in a playlist file are generally checked against the content
manager before being added to the playlist; however, this check can be disabled
by setting the bVerifyContent parameter of the LoadPlaylist function to false.
In this case, entries in the playlist file that aren't already in the content
manager will be added automatically.  This is useful for quickly grabbing a
playlist before doing a lengthy content update.

</p>
</td></tr>
<tr valign='top'><td><h4><a name=''>Adding playlist formats</a></h4></td>
				<td>
<p class="Body1">
New playlist formats can be added through the use of the REGISTER_PLAYLIST_FORMAT macro.  Each playlist format must provide a unique format ID, a list of supported file extentions, and functions for loading and saving.

</p>

</td></tr>
<tr valign='top'><td><h4><a name=''>Loading a playlist</a></h4></td>
				<td><p class="Body1">
In general, your playlist function should follow these steps:
</p>

<ol>
	<li>Open the URL for reading.  This is easiest done by calling the data source manager's OpenInputStream function.</li>
	<li>Add entries.  Generate a URL and call the content manager's <span class="Code">GetMediaRecord()</span> function to get a pointer to the content record to add to the playlist.  If no record exists and <span class="Code">bVerifyContent</span> is false, then populate a <span class="Code">media_record_info_t</span> structure and pass it to the content manager's <span class="Code">AddMediaRecord()</span> function.</li>
	<li>Close the stream.</li>
</ol>

</td></tr>
<tr valign='top'><td><h4><a name=''>Saving a playlist</a></h4></td>
				<td>
<p class="Body1">
In general, the save playlist function should follow these steps:
</p>

<ol>
	<li>Open the URL for writing.  This is easiest done by calling the data source manager's <span class="Code">OpenOutputStream</span> function.</li>
	<li>Traverse the playlist, saving each entry to file.</li>
	<li>Close the stream.</li>
</ol>


</td></tr>
</table>

	<hr><br><table width="100%" >
<tr><td align="left" width="33%"><a href="aContentManager.htm" title='Content Manager'><img src='images/previous.gif' width=78 height=10 border='0'></a></td><td align="center" width="33%">
<SCRIPT LANGUAGE="JavaScript">
   if (parent.frames.length>1){
       document.write('<A HREF="JavaScript:SwitchView(0);"><img src="images/pagevw.gif" width=49 height=10 border="0"></A>');
   }else{
       document.write('<A HREF="JavaScript:SwitchView(1);"><img src="images/normalvw.gif" width=60 height=8 border="0"></A>');
   }
</SCRIPT>
</td><td align="right" width="33%">
<a href="aPlayManager.htm" title='Play Manager'><img src='images/next.gif' width=60 height=10 border='0'></a></td></tr>
</table><p class="Legal">
<a href="JavaScript:ShowCopyright();">Copyright &#169; 1998 - 2001</a> Interactive Objects<SUP><FONT SIZE="-3">TM</FONT></SUP>. All rights reserved.
<br>

 Last Modified on Oct 25, 2001 12:24 pm
</p>
</body>

</html>
