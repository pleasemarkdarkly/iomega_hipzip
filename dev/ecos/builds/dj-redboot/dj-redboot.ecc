# eCos saved configuration

# ---- commands --------------------------------------------------------
# This section contains information about the savefile format.
# It should not be edited. Any modifications made to this section
# may make it impossible for the configuration tools to read
# the savefile.

cdl_savefile_version 1;
cdl_savefile_command cdl_savefile_version {};
cdl_savefile_command cdl_savefile_command {};
cdl_savefile_command cdl_configuration { description hardware template package };
cdl_savefile_command cdl_package { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_component { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_option { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_interface { value_source user_value wizard_value inferred_value };

# ---- toplevel --------------------------------------------------------
# This section defines the toplevel configuration object. The only
# values that can be changed are the name of the configuration and
# the description field. It is not possible to modify the target,
# the template or the set of packages simply by editing the lines
# below because these changes have wide-ranging effects. Instead
# the appropriate tools should be used to make such modifications.

cdl_configuration eCos {
    description "" ;

    # These fields should not be modified.
    hardware    dharma_sst ;
    template    redboot ;
    package CYGPKG_HAL current ;
    package CYGPKG_INFRA current ;
    package CYGPKG_REDBOOT current ;
    package CYGPKG_IO_FLASH current ;
    package CYGPKG_MEMALLOC current ;
    package CYGPKG_COMPRESS_ZLIB current ;
    package CYGPKG_ISOINFRA current ;
    package CYGPKG_LIBC_STRING current ;
    package -hardware CYGPKG_HAL_ARM current ;
    package -hardware CYGPKG_HAL_ARM_EDB7XXX current ;
    package -hardware CYGPKG_IO_SERIAL_ARM_EDB7XXX current ;
    package -hardware CYGPKG_DEVS_FLASH_SST current ;
};

# ---- conflicts -------------------------------------------------------
# There are no conflicts.

# ---- contents --------------------------------------------------------
# >
# >
# ISO C library string functions
# doc: redirect/the-iso-standard-c-and-math-libraries.html
# This package provides string functions specified by the
# ISO C standard - ISO/IEC 9899:1990.
#
cdl_package CYGPKG_LIBC_STRING {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRING_MEMFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_MEMFUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRING_STRFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_STRFUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRTOK_R_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRTOK_R_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
};

# >
# Inline versions of <string.h> functions
# This option chooses whether some of the
# particularly simple string functions from
# <string.h> are available as inline
# functions. This may improve performance, and as
# the functions are small, may even improve code
# size.
#
cdl_option CYGIMP_LIBC_STRING_INLINES {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 1
};

# Optimize string functions for code size
# This option tries to reduce string function
# code size at the expense of execution speed. The
# same effect can be produced if the code is
# compiled with the -Os option to the compiler.
#
cdl_option CYGIMP_LIBC_STRING_PREFER_SMALL_TO_FAST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide BSD compatibility functions
# Enabling this option causes various compatibility functions
# commonly found in the BSD UNIX operating system to be included.
# These are functions such as bzero, bcmp, bcopy, bzero, strcasecmp,
# strncasecmp, index, rindex and swab.
#
cdl_option CYGFUN_LIBC_STRING_BSD_FUNCS {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
    # Requires:  CYGBLD_ISO_STRING_BSD_FUNCS_HEADER ==  "<cyg/libc/string/bsdstring.h>" 
    #     CYGBLD_ISO_STRING_BSD_FUNCS_HEADER == <cyg/libc/string/bsdstring.h>
    #   --> 1
    # Requires: CYGINT_ISO_CTYPE
    #     CYGINT_ISO_CTYPE == 0
    #   --> 0
};

# strtok
# These options control the behaviour of the
# strtok() and strtok_r() string tokenization
# functions.
#
cdl_component CYGPKG_LIBC_STRING_STRTOK {
    # There is no associated value.
};

# >
# Per-thread strtok()
# This option controls whether the string function
# strtok() has its state recorded on a per-thread
# basis rather than global. If this option is
# disabled, some per-thread space can be saved.
# Note there is also a POSIX-standard strtok_r()
# function to achieve a similar effect with user
# support. Enabling this option will use one slot
# of kernel per-thread data. You should ensure you
# have enough slots configured for all your
# per-thread data.
#
cdl_option CYGSEM_LIBC_STRING_PER_THREAD_STRTOK {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA (unknown) == 0
    #   --> 0
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA (unknown) == 0
    #   --> 0
};

# Tracing level
# Trace verbosity level for debugging the <string.h>
# functions strtok() and strtok_r(). Increase this
# value to get additional trace output.
#
cdl_option CYGNUM_LIBC_STRING_STRTOK_TRACE_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
};

# <
# C library string functions build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_LIBC_STRING_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_LIBC_STRING_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_LIBC_STRING_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# C library string function tests
# This option specifies the set of tests for the C library
# string functions.
#
cdl_option CYGPKG_LIBC_STRING_TESTS {
    # Calculated value:  "tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2" 
    # Flavor: data
    # Current_value: tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2
};

# <
# <
# Global build options
# Global build options including control over
# compiler flags, linker flags and choice of toolchain.
#
cdl_component CYGBLD_GLOBAL_OPTIONS {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Global command prefix
# This option specifies the command prefix used when
# invoking the build tools.
#
cdl_option CYGBLD_GLOBAL_COMMAND_PREFIX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value arm-elf
    # value_source default
    # Default value: arm-elf
};

# Global compiler flags
# This option controls the global compiler flags which are used to
# compile all packages by default. Individual packages may define
# options which override these global flags.
#
cdl_option CYGBLD_GLOBAL_CFLAGS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-mcpu=arm7tdmi -Wall -Wpointer-arith -Wstrict-prototypes -Winline -Wundef -Woverloaded-virtual -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions -fvtable-gc -finit-priority"
    # value_source default
    # Default value:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "-mcpu=arm710c -Wall -Wpointer-arith -Wstrict-prototypes -Winline -Wundef -Woverloaded-virtual -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions -fvtable-gc -finit-priority" :  "-mcpu=arm7tdmi -Wall -Wpointer-arith -Wstrict-prototypes -Winline -Wundef -Woverloaded-virtual -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions -fvtable-gc -finit-priority" 
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #   --> "-mcpu=arm7tdmi -Wall -Wpointer-arith -Wstrict-prototypes -Winline -Wundef -Woverloaded-virtual -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions -fvtable-gc -finit-priority"
};

# Global linker flags
# This option controls the global linker flags. Individual
# packages may define options which override these global flags.
#
cdl_option CYGBLD_GLOBAL_LDFLAGS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    # value_source default
    # Default value:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "-mcpu=arm710c -Wl,--gc-sections -Wl,-static -g -nostdlib" : "-mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #   --> "-mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
};

# Build GDB stub ROM image
# This option enables the building of the GDB stubs for the
# board. The common HAL controls takes care of most of the
# build process, but the final conversion from ELF image to
# binary data is handled by the platform CDL, allowing
# relocation of the data if necessary.
#
cdl_option CYGBLD_BUILD_GDB_STUBS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  (CYG_HAL_STARTUP == "ROM") || (CYG_HAL_STARTUP == "ROMRAM") 
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #   --> 1
    # Requires: CYGSEM_HAL_ROM_MONITOR
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #   --> 1
    # Requires: CYGBLD_BUILD_COMMON_GDB_STUBS
    #     CYGBLD_BUILD_COMMON_GDB_STUBS == 0
    #   --> 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 1
    #   --> 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT == 1
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    #     CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    #     CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM == 0
    #   --> 1
};

# Build flash programming tool
# This option enables the building of the flash programming tool for copying the GDB stubs into flash memory.
#
cdl_option CYGBLD_BUILD_FLASH_TOOL {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  CYG_HAL_STARTUP == "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 0
    # Requires: CYGPKG_LIBC
    #     CYGPKG_LIBC (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
};

# Build tests for auxiliaries
# This option enables the building of some tests for the
# auxiliary devices.
#
cdl_option CYGBLD_BUILD_AUX_TESTS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  CYG_HAL_STARTUP == "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 0
    # Requires: CYGPKG_LIBC
    #     CYGPKG_LIBC (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
};

# Build common GDB stub ROM image
# Unless a target board has specific requirements to the
# stub implementation, it can use a simple common stub.
# This option, which gets enabled by platform HALs as
# appropriate, controls the building of the common stub.
#
cdl_option CYGBLD_BUILD_COMMON_GDB_STUBS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires: CYGBLD_BUILD_COMMON_GDB_STUBS
};

# <
# CygMon HAL options
# This option lists the target's requirements for a valid CygMon
# configuration.
#
cdl_component CYGPKG_CYGMON_HAL_OPTIONS {
    # This option is not active
    # ActiveIf constraint: CYGPKG_CYGMON
    #     CYGPKG_CYGMON (unknown) == 0
    #   --> 0

    # There is no associated value.
    # Requires: CYGPKG_IO_SERIAL_ARM_EDB7XXX
    #     CYGPKG_IO_SERIAL_ARM_EDB7XXX == 0
    #   --> 0
    # Requires: (CYGDAT_CYGMON_CONSOLE_DEV != "\"/dev/ser1\"") ||  (CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1)
    #     CYGDAT_CYGMON_CONSOLE_DEV == 0
    #     CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1 == 0
    #   --> 1
    # Requires: (CYGDAT_CYGMON_CONSOLE_DEV != "\"/dev/ser2\"") ||  (CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL2)
    #     CYGDAT_CYGMON_CONSOLE_DEV == 0
    #     CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL2 == 0
    #   --> 1
};

# >
# Serial port for default console
# This option selects the physical device to use as the default
# console device for CygMon.
#
cdl_option CYGDAT_CYGMON_CONSOLE_DEV {
    # This option is not active
    # The parent CYGPKG_CYGMON_HAL_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser1\""
    # value_source default
    # Default value: "\"/dev/ser1\""

    # The following properties are affected by this value
    # component CYGPKG_CYGMON_HAL_OPTIONS
    #     Requires: (CYGDAT_CYGMON_CONSOLE_DEV != "\"/dev/ser1\"") ||  (CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1)
    # component CYGPKG_CYGMON_HAL_OPTIONS
    #     Requires: (CYGDAT_CYGMON_CONSOLE_DEV != "\"/dev/ser2\"") ||  (CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL2)
};

# Build CygMon ROM binary image
# This option enables the conversion of the CygMon ELF
# image to a binary image suitable for ROM programming.
#
cdl_option CYGBLD_BUILD_CYGMON_BIN {
    # This option is not active
    # The parent CYGPKG_CYGMON_HAL_OPTIONS is not active
    # ActiveIf constraint: CYGBLD_BUILD_CYGMON
    #     CYGBLD_BUILD_CYGMON (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Cirrus Logic ARM based boards serial device drivers
# doc: redirect/ecos-device-drivers.html
# This option enables the serial device drivers for the
# Cirrus Logic ARM based development boards.
#
cdl_package CYGPKG_IO_SERIAL_ARM_EDB7XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL
    #     CYGPKG_IO_SERIAL (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_ARM_EDB7XXX
    #     CYGPKG_HAL_ARM_EDB7XXX == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ERROR
    #     CYGPKG_ERROR (unknown) == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGPKG_CYGMON_HAL_OPTIONS
    #     Requires: CYGPKG_IO_SERIAL_ARM_EDB7XXX
};

# >
# Cirrus Logic EDB7XXX serial port 1 driver
# This option includes the serial device driver for the Cirrus Logic EDB7XXX
# port 1.
#
cdl_component CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_ARM_EDB7XXX_TESTING
    #     ActiveIf: CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1
    # component CYGPKG_CYGMON_HAL_OPTIONS
    #     Requires: (CYGDAT_CYGMON_CONSOLE_DEV != "\"/dev/ser1\"") ||  (CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1)
};

# >
# Device name for the Cirrus Logic EDB7XXX serial port 1 driver
# This option specifies the name of serial device for the ARM 
# EDB7XXX port 1.
#
cdl_option CYGDAT_IO_SERIAL_ARM_EDB7XXX_SERIAL1_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser1\""
    # value_source default
    # Default value: "\"/dev/ser1\""

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGDAT_IO_SERIAL_ARM_EDB7XXX_SERIAL1_NAME 
};

# Baud rate for the Cirrus Logic EDB7XXX serial port 1 driver
# This option specifies the default baud rate (speed) for the ARM
# EDB7XXX port 1.
#
cdl_option CYGNUM_IO_SERIAL_ARM_EDB7XXX_SERIAL1_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 2400 3600
    #                           4800 7200 9600 14400 19200 38400 57600 115200 230400
    #             
};

# Buffer size for the Cirrus Logic EDB7XXX serial port 1 driver
# This option specifies the size of the internal buffers used 
# for the Cirrus Logic EDB7XXX port 1.
#
cdl_option CYGNUM_IO_SERIAL_ARM_EDB7XXX_SERIAL1_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# <
# Cirrus Logic EDB7XXX serial port 2 driver
# This option includes the serial device driver for the ARM 
# EDB7XXX port 2.
#
cdl_component CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL2 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_CYGMON_HAL_OPTIONS
    #     Requires: (CYGDAT_CYGMON_CONSOLE_DEV != "\"/dev/ser2\"") ||  (CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL2)
};

# >
# Device name for the Cirrus Logic EDB7XXX serial port 2 driver
# This option specifies the name of serial device for the ARM 
# EDB7XXX port 2.
#
cdl_option CYGDAT_IO_SERIAL_ARM_EDB7XXX_SERIAL2_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser2\""
    # value_source default
    # Default value: "\"/dev/ser2\""
};

# Baud rate for the Cirrus Logic EDB7XXX serial port 2 driver
# This option specifies the default baud rate (speed) for the 
# Cirrus Logic EDB7XXX port 2.
#
cdl_option CYGNUM_IO_SERIAL_ARM_EDB7XXX_SERIAL2_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 2400 3600
    #                           4800 7200 9600 14400 19200 38400 57600 115200 230400
    #             
};

# Buffer size for the Cirrus Logic EDB7XXX serial port 2 driver
# This option specifies the size of the internal buffers used for
# the Cirrus Logic EDB7XXX port 2.
#
cdl_option CYGNUM_IO_SERIAL_ARM_EDB7XXX_SERIAL2_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# <
# Serial device driver build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_IO_SERIAL_ARM_EDB7XXX_OPTIONS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building these serial device drivers. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_IO_SERIAL_ARM_EDB7XXX_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building these serial device drivers. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_IO_SERIAL_ARM_EDB7XXX_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# Testing parameters
#
cdl_component CYGPKG_IO_SERIAL_ARM_EDB7XXX_TESTING {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1
    #     CYGPKG_IO_SERIAL_ARM_EDB7XXX_SERIAL1 == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# >
# Serial device used for testing
#
cdl_option CYGPRI_SER_TEST_SER_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_ARM_EDB7XXX_TESTING is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGDAT_IO_SERIAL_ARM_EDB7XXX_SERIAL1_NAME 
    #     CYGDAT_IO_SERIAL_ARM_EDB7XXX_SERIAL1_NAME == 0
    #   --> 0
};

# <
# <
# <
# eCos HAL
# doc: redirect/the-ecos-hardware-abstraction-layer-hal.html
# The eCos HAL package provide a porting layer for
# higher-level parts of the system such as the kernel and the
# C library. Each installation should have HAL packages for
# one or more architectures, and for each architecture there
# may be one or more supported platforms. It is necessary to
# select one target architecture and one platform for that
# architecture. There are also a number of configuration
# options that are common to all HAL packages.
#
cdl_package CYGPKG_HAL {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_INFRA
    #     CYGPKG_INFRA == current
    #   --> 1

    # The following properties are affected by this value
};

# >
# Platform-independent HAL options
# A number of configuration options are common to most or all
# HAL packages, for example options controlling how much state
# should be saved during a context switch. The implementations
# of these options will vary from architecture to architecture.
#
cdl_component CYGPKG_HAL_COMMON {
    # There is no associated value.
};

# >
# Provide eCos kernel support
# The HAL can be configured to either support the full eCos
# kernel, or to support only very simple applications which do
# not require a full kernel. If kernel support is not required
# then some of the startup, exception, and interrupt handling
# code can be eliminated.
#
cdl_option CYGFUN_HAL_COMMON_KERNEL_SUPPORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
};

# HAL exception support
# When a processor exception occurs, for example an attempt to
# execute an illegal instruction or to perform a divide by
# zero, this exception may be handled in a number of different
# ways. If the target system has gdb support then typically
# the exception will be handled by gdb code. Otherwise if the
# HAL exception support is enabled then the HAL will invoke a
# routine deliver_exception(). Typically this routine will be
# provided by the eCos kernel, but it is possible for
# application code to provide its own implementation. If the
# HAL exception support is not enabled and a processor
# exception occurs then the behaviour of the system is
# undefined.
#
cdl_option CYGPKG_HAL_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGPKG_KERNEL_EXCEPTIONS
    #     CYGPKG_KERNEL_EXCEPTIONS (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL_EXCEPTIONS
    #     CYGPKG_KERNEL_EXCEPTIONS (unknown) == 0
    #   --> 0
};

# Stop calling constructors early
# This option supports environments where some constructors
# must be run in the context of a thread rather than at
# simple system startup time. A boolean flag named
# cyg_hal_stop_constructors is set to 1 when constructors
# should no longer be invoked. It is up to some other
# package to deal with the rest of the constructors.
# In the current version this is only possible with the
# C library.
#
cdl_option CYGSEM_HAL_STOP_CONSTRUCTORS_ON_FLAG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS
    #     CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS (unknown) == 0
    #   --> 0
};

# HAL uses the MMU and allows for CDL manipulation of it's use
#
cdl_interface CYGINT_HAL_SUPPORTS_MMU_TABLES {
    # Implemented by CYGPKG_HAL_ARM_EDB7XXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_INSTALL_MMU_TABLES
    #     ActiveIf: CYGINT_HAL_SUPPORTS_MMU_TABLES
};

# Install MMU tables.
# This option controls whether this application installs
# its own Memory Management Unit (MMU) tables, or relies on the
# existing environment to run.
#
cdl_option CYGSEM_HAL_INSTALL_MMU_TABLES {
    # ActiveIf constraint: CYGINT_HAL_SUPPORTS_MMU_TABLES
    #     CYGINT_HAL_SUPPORTS_MMU_TABLES == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYG_HAL_STARTUP != "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_STATIC_MMU_TABLES
    #     Requires: CYGSEM_HAL_INSTALL_MMU_TABLES
};

# Use static MMU tables.
# This option defines an environment where any Memory
# Management Unit (MMU) tables are constant.  Normally used by ROM
# based environments, this provides a way to save RAM usage which
# would otherwise be required for these tables.
#
cdl_option CYGSEM_HAL_STATIC_MMU_TABLES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_HAL_INSTALL_MMU_TABLES
    #     CYGSEM_HAL_INSTALL_MMU_TABLES == 1
    #   --> 1
};

# Route diagnostic output to debug channel
# If not inheriting the console setup from the ROM monitor,
# it is possible to redirect diagnostic output to the debug
# channel by enabling this option. Depending on the debugger
# used it may also be necessary to select a mangler for the
# output to be displayed by the debugger.
#
cdl_component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN {
    # ActiveIf constraint: !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE == 0
    #   --> 1
    # ActiveIf constraint:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    #     CYGPKG_HAL_ARM == current
    #     CYGPKG_HAL_POWERPC_MPC8xx (unknown) == 0
    #     CYGPKG_HAL_V85X_V850 (unknown) == 0
    #     CYGSEM_HAL_VIRTUAL_VECTOR_DIAG == 1
    #   --> 1

    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     Calculated:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
};

# >
# Mangler used on diag output
# It is sometimes necessary to mangle (encode) the
# diag ASCII text output in order for it to show up at the
# other end. In particular, GDB may silently ignore raw
# ASCII text.
#
cdl_option CYGSEM_HAL_DIAG_MANGLER {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value GDB
    # value_source default
    # Default value: GDB
    # Legal values: "GDB" "None"
};

# <
# <
# HAL interrupt handling
# A number of configuration options related to interrupt
# handling are common to most or all HAL packages, even though
# the implementations will vary from architecture to
# architecture.
#
cdl_component CYGPKG_HAL_COMMON_INTERRUPTS {
    # There is no associated value.
};

# >
# Use separate stack for interrupts
# When an interrupt occurs this interrupt can be handled either
# on the current stack or on a separate stack maintained by the
# HAL. Using a separate stack requires a small number of extra
# instructions in the interrupt handling code, but it has the
# advantage that it is no longer necessary to allow extra space
# in every thread stack for the interrupt handlers. The amount
# of extra space required depends on the interrupt handlers
# that are being used.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Interrupt stack size
# This configuration option specifies the stack size in bytes
# for the interrupt stack. Typically this should be a multiple
# of 16, but the exact requirements will vary from architecture
# to architecture. The interrupt stack serves two separate
# purposes. It is used as the stack during system
# initialization. In addition, if the interrupt system is
# configured to use a separate stack then all interrupts will
# be processed on this stack. The exact memory requirements
# will vary from application to application, and will depend
# heavily on whether or not other interrupt-related options,
# for example nested interrupts, are enabled. On most targets,
# in a configuration with no kernel this stack will also be
# the stack used to invoke the application, and must obviously
# be appropriately large in that case.
#
cdl_option CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE {
    # Flavor: data
    user_value 4096
    # value_source user
    # Default value:  CYGPKG_KERNEL ? 4096 : 32768 
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 32768
    # Legal values: 1024 to 1048576
};

# Allow nested interrupts
# When an interrupt occurs the HAL interrupt handling code can
# either leave interrupts disabled for the duration of the
# interrupt handling code, or by doing some extra work it can
# reenable interrupts before invoking the interrupt handler and
# thus allow nested interrupts to happen. If all the interrupt
# handlers being used are small and do not involve any loops
# then it is usually better to disallow nested interrupts.
# However if any of the interrupt handlers are more complicated
# than nested interrupts will usually be required.
#
cdl_option CYGSEM_HAL_COMMON_INTERRUPTS_ALLOW_NESTING {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Save minimum context on interrupt
# The HAL interrupt handling code can exploit the calling conventions
# defined for a given architecture to reduce the amount of state
# that has to be saved. Generally this improves performance and
# reduces code size. However it can make source-level debugging
# more difficult.
#
cdl_option CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
};

# Chain all interrupts together
# Interrupts can be attached to vectors either singly, or be
# chained together. The latter is necessary if there is no way
# of discovering which device has interrupted without
# inspecting the device itself. It can also reduce the amount
# of RAM needed for interrupt decoding tables and code.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Ignore spurious [fleeting] interrupts
# On some hardware, interrupt sources may not be de-bounced or
# de-glitched.  Rather than try to handle these interrupts (no
# handling may be possible), this option allows the HAL to simply
# ignore them.  In most cases, if the interrupt is real it will
# reoccur in a detectable form.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_IGNORE_SPURIOUS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# HAL context switch support
# A number of configuration options related to thread contexts
# are common to most or all HAL packages, even though the
# implementations will vary from architecture to architecture.
#
cdl_component CYGPKG_HAL_COMMON_CONTEXT {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Use minimum thread context
# The thread context switch code can exploit the calling
# conventions defined for a given architecture to reduce the
# amount of state that has to be saved during a context
# switch. Generally this improves performance and reduces
# code size. However it can make source-level debugging more
# difficult.
#
cdl_option CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
};

# <
# Explicit control over cache behaviour
# These options let the default behaviour of the caches 
# be easily configurable.
#
cdl_component CYGPKG_HAL_CACHE_CONTROL {
    # There is no associated value.
};

# >
# Enable DATA cache on startup
# Enabling this option will cause the data cache to be enabled
# as soon as practicable when eCos starts up.  One would choose
# to disable this if the data cache cannot safely be turned on,
# such as a case where the cache(s) require additional platform
# specific setup.
#
cdl_option CYGSEM_HAL_ENABLE_DCACHE_ON_STARTUP {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 1
};

# Enable INSTRUCTION cache on startup
# Enabling this option will cause the instruction cache to be enabled
# as soon as practicable when eCos starts up.  One would choose
# to disable this if the instruction cache cannot safely be turned on,
# such as a case where the cache(s) require additional platform
# specific setup.
#
cdl_option CYGSEM_HAL_ENABLE_ICACHE_ON_STARTUP {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 1
};

# <
# Source-level debugging support
# If the source level debugger gdb is to be used for debugging
# application code then it may be necessary to configure in support
# for this in the HAL.
#
cdl_component CYGPKG_HAL_DEBUG {
    # There is no associated value.
};

# >
# Support for GDB stubs
# The HAL implements GDB stubs for the target.
#
cdl_interface CYGINT_HAL_DEBUG_GDB_STUBS {
    # Implemented by CYGPKG_HAL_ARM_EDB7XXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS
    # component CYGBLD_BUILD_REDBOOT
    #     Requires:  !CYGINT_HAL_DEBUG_GDB_STUBS || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # component CYGBLD_BUILD_REDBOOT
    #     Requires:  !CYGINT_HAL_DEBUG_GDB_STUBS || CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT 
};

# Include GDB stubs in HAL
# This option causes a set of GDB stubs to be included into the
# system. On some target systems the GDB support will be
# provided by other means, for example by a ROM monitor. On
# other targets, especially when building a ROM-booting system,
# the necessary support has to go into the target library
# itself. When GDB stubs are include in a configuration, HAL
# serial drivers must also be included.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS
    #     CYGINT_HAL_DEBUG_GDB_STUBS == 1
    #   --> 1

    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0
    # Requires: ! CYGSEM_HAL_USE_ROM_MONITOR
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 1
    # Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_DIAG == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 1

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     DefaultValue:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     DefaultValue: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     DefaultValue:  !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGBLD_BUILD_COMMON_GDB_STUBS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # component CYGBLD_BUILD_REDBOOT
    #     Requires:  !CYGINT_HAL_DEBUG_GDB_STUBS || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGHWR_HAL_ARM_DUMP_EXCEPTIONS
    #     Requires: !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
};

# Support for external break support in GDB stubs
# The HAL implements external break (or asynchronous interrupt)
# in the GDB stubs for the target.
#
cdl_interface CYGINT_HAL_DEBUG_GDB_STUBS_BREAK {
    # Implemented by CYGPKG_HAL_ARM_EDB7XXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
};

# Include GDB external break support for stubs
# This option causes the GDB stub to add a serial interrupt handler
# which will listen for GDB break packets. This lets you stop the
# target asynchronously when using GDB, usually by hitting Control+C
# or pressing the STOP button. This option differs from
# CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT in that it is used when
# GDB stubs are present.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
    #     CYGINT_HAL_DEBUG_GDB_STUBS_BREAK == 1
    #   --> 1

    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     Requires: !CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    # component CYGBLD_BUILD_REDBOOT
    #     Requires:  !CYGINT_HAL_DEBUG_GDB_STUBS || CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT 
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
};

# Platform does not support CTRLC
#
cdl_interface CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0 
};

# Include GDB external break support when no stubs
# This option adds an interrupt handler for the GDB serial line
# which will listen for GDB break packets. This lets you stop the
# target asynchronously when using GDB, usually by hitting Control+C
# or pressing the STOP button. This option differs from
# CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT in that it is used when the GDB
# stubs are NOT present.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT {
    # ActiveIf constraint:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # ActiveIf constraint:  CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0 
    #     CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0
    #   --> 1

    # Flavor: bool
    user_value 0
    # value_source user
    # Default value:  !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 0
    # Requires: !CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 1
    #   --> 0

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
};

# Include GDB multi-threading debug support
# This option enables some extra HAL code which is needed
# to support multi-threaded source level debugging.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT {
    # ActiveIf constraint:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #     CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT (unknown) == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGBLD_BUILD_REDBOOT_WITH_THREADS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
};

# Number of times to retry sending a $O packet
# This option controls the number of attempts that eCos programs
# will make to send a $O packet to a host GDB process.  If it is
# set non-zero, then the target process will attempt to resend the
# $O packet data up to this number of retries.  Caution: use of
# this option is not recommended as it can thoroughly confuse the
# host GDB process.
#
cdl_option CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Timeout period for GDB packets
# This option controls the time (in milliseconds) that eCos programs
# will wait for a response when sending packets to a host GDB process.
# If this time elapses, then the packet will be resent, up to some
# maximum number of times (CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES).
#
cdl_option CYGNUM_HAL_DEBUG_GDB_PROTOCOL_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 500
    # value_source default
    # Default value: 500
};

# <
# ROM monitor support
# Support for ROM monitors can be built in to your application. 
# It may also be relevant to build your application as a ROM monitor
# itself. Such options are contained here if relevant for your chosen
# platform. The options and ROM monitors available to choose are
# platform-dependent.
#
cdl_component CYGPKG_HAL_ROM_MONITOR {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Target has virtual vector support
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT {
    # Implemented by CYGPKG_HAL_ARM_EDB7XXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # component CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     ActiveIf: CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
};

# The platform port predates virtual vectors
# Many platform HALs have adopted the virtual vector support
# only after its introduction. On those platforms, old ROM
# monitors will not provide the necessary services - and
# so the use of these services should be disabled per default.
# Newer ports, however, guarantee to provide the necessary
# services in all ROM monitors, and so default to use the
# services.
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     DefaultValue:  !CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED  && !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR || CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED 
};

# Target supports baud rate control via vectors
# Whether this target supports the __COMMCTL_GETBAUD
# and __COMMCTL_SETBAUD virtual vector comm control operations.
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_VARIABLE_BAUD_RATE
    #     ActiveIf: CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT
};

# Enable use of virtual vector calling interface
# Virtual vector support allows the HAL to let the ROM
# monitor handle certain operations. The virtual vector table
# defines a calling interface between applications running in
# RAM and the ROM monitor.
#
cdl_component CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT {
    # ActiveIf constraint: CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
};

# >
# Inherit console settings from ROM monitor
# When this option is set, the application will inherit
# the console as set up by the ROM monitor. This means
# that the application will use whatever channel and
# mangling style was used by the ROM monitor when
# the application was launched.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE {
    # This option is not active
    # ActiveIf constraint: CYGSEM_HAL_USE_ROM_MONITOR
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 0

    # Flavor: bool
    user_value 0
    # value_source user
    # Default value:  !CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED  && !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED == 0
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 0

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf: !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    # option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     Calculated:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
};

# Debug channel is configurable
# This option is a configuration hint - it is enabled
# when the HAL initialization code will make use
# of the debug channel configuration option.
#
cdl_option CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE {
    # Calculated value:  CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
};

# Console channel is configurable
# This option is a configuration hint - it is enabled
# when the HAL initialization code will make use
# of the console channel configuration option.
#
cdl_option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE {
    # Calculated value:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE == 0
    #     CYGDBG_HAL_DIAG_TO_DEBUG_CHAN == 1
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
};

# Initialize whole of virtual vector table
# This option will cause the whole of the virtual
# vector table to be initialized with dummy values on
# startup. When this option is enabled, all the
# options below must also be enabled - or the
# table would be empty when the application
# launches.
# On targets where older ROM monitors without
# virtual vector support may still be in use, it is
# necessary for RAM applictions to initialize the
# table (since all HAL diagnostics and debug IO
# happens via the table). The default setting of
# this option will see to this, but it is still
# possible to override the option when a target with
# a newer ROM monitor is used.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR || CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED 
    #     CYG_HAL_STARTUP == ROM
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #     CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED == 0
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_CACHE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_CACHE == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT
    #     ActiveIf: !CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_CACHE
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
};

# Claim virtual vector table entries by default
# By default most virtual vectors will be claimed by
# RAM startup configurations, meaning that the RAM
# application will provide the services. The
# exception is COMMS support (HAL
# diagnostics/debugging IO) which is left in the
# control of the ROM monitor.
# The reasoning behind this is to get as much of the
# code exercised during regular development so it
# is known to be working the few times a new ROM
# monitor or a ROM production configuration is used
# - COMMS are excluded only by necessity in order to
# avoid breaking an existing debugger connections
# (there may be ways around this).
# For production RAM configurations this option can
# be switched off, causing the appliction to rely on
# the ROM monitor for these services, thus
# saving some space.
# Individual vectors may also be left unclaimed,
# controlled by the below options (meaning that the
# associated service provided by the ROM monitor
# will be used).
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT {
    # This option is not active
    # ActiveIf constraint: !CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_CACHE
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
};

# Claim reset virtual vectors
# This option will cause the reset and kill_by_reset
# virtual vectors to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
};

# Claim delay_us virtual vector
# This option will cause the delay_us
# virtual vector to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
};

# Claim cache virtual vectors
# This option will cause the cache virtual vectors
# to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_CACHE {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_CACHE
};

# Claim data virtual vectors
# This option will cause the data virtual vectors
# to be claimed. At present there is only one, used
# by the RedBoot ethernet driver to share diag output.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
};

# Claim comms virtual vectors
# This option will cause the communication tables
# that are part of the virtual vectors mechanism to
# be claimed. Note that doing this may cause an
# existing ROM monitor communication connection to
# be closed. For this reason, the option is disabled
# per default for normal application
# configurations.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     DefaultValue:  !CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED  && !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
    #     Calculated:  CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
};

# Do diagnostic IO via virtual vector table
# All HAL IO happens via the virtual vector table / comm
# tables when those tables are supported by the HAL.
# If so desired, the low-level IO functions can
# still be provided by the RAM application by
# enabling the CLAIM_COMMS option.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_DIAG {
    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
};

# <
# Behave as a ROM monitor
# Enable this option if this program is to be used as a ROM monitor,
# i.e. applications will be loaded into RAM on the board, and this
# ROM monitor may process exceptions or interrupts generated from the
# application. This enables features such as utilizing a separate
# interrupt stack when exceptions are generated.
#
cdl_option CYGSEM_HAL_ROM_MONITOR {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0
    # Requires:  (CYG_HAL_STARTUP == "ROM") || (CYG_HAL_STARTUP == "ROMRAM") 
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires: CYGSEM_HAL_ROM_MONITOR
    # option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     Requires: CYGSEM_HAL_ROM_MONITOR
    # option CYGBLD_ARM_ENABLE_THUMB_INTERWORK
    #     DefaultValue:  (CYGHWR_THUMB || CYGSEM_HAL_ROM_MONITOR) 
};

# Work with a ROM monitor
# Support can be enabled for different varieties of ROM monitor.
# This support changes various eCos semantics such as the encoding
# of diagnostic output, or the overriding of hardware interrupt
# vectors.
# Firstly there is "Generic" support which prevents the HAL
# from overriding the hardware vectors that it does not use, to
# instead allow an installed ROM monitor to handle them. This is
# the most basic support which is likely to be common to most
# implementations of ROM monitor.
# "GDB_stubs" provides support when GDB stubs are included in
# the ROM monitor or boot ROM.
#
cdl_option CYGSEM_HAL_USE_ROM_MONITOR {
    # Flavor: booldata
    user_value 0 0
    # value_source user
    # Default value:  CYG_HAL_STARTUP == "RAM" ? "GDB_stubs" : 0 
    #     CYG_HAL_STARTUP == ROM
    #   --> 0 0
    # Legal values:  "Generic" "GDB_stubs" 
    # Requires:  CYG_HAL_STARTUP == "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGSEM_HAL_USE_ROM_MONITOR
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     ActiveIf: CYGSEM_HAL_USE_ROM_MONITOR
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR || CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED 
};

# <
# Platform defined I/O channels.
# Platforms which provide additional I/O channels can implement
# this interface, indicating that the function plf_if_init()
# needs to be called.
#
cdl_interface CYGINT_HAL_PLF_IF_INIT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Platform IDE I/O support.
# Platforms which provide IDE controllers can implement
# this interface, indicating that IDE I/O macros are
# available.
#
cdl_interface CYGINT_HAL_PLF_IF_IDE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_DISK
    #     ActiveIf:  CYGINT_HAL_PLF_IF_IDE != 0 
};

# Build Compiler sanity checking tests
# Enabling this option causes compiler tests to be built.
#
cdl_option CYGPKG_HAL_BUILD_COMPILER_TESTS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGPKG_HAL_TESTS
    #     Calculated:  (!CYGPKG_HAL_BUILD_COMPILER_TESTS) ? 
    #                           "tests/cache tests/context tests/intr tests/basic" :
    #                           "tests/cache tests/context tests/intr tests/basic tests/cpp1 tests/vaargs" 
};

# Common HAL tests
# This option specifies the set of tests for the common HAL.
#
cdl_option CYGPKG_HAL_TESTS {
    # Calculated value:  (!CYGPKG_HAL_BUILD_COMPILER_TESTS) ? 
    #                           "tests/cache tests/context tests/intr tests/basic" :
    #                           "tests/cache tests/context tests/intr tests/basic tests/cpp1 tests/vaargs" 
    #     CYGPKG_HAL_BUILD_COMPILER_TESTS == 0
    # Flavor: data
    # Current_value: tests/cache tests/context tests/intr tests/basic
};

# ARM architecture
# The ARM architecture HAL package provides generic
# support for this processor architecture. It is also
# necessary to select a specific target platform HAL
# package.
#
cdl_package CYGPKG_HAL_ARM {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    # interface CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED
    #     ActiveIf: CYGPKG_HAL_ARM
};

# >
# The CPU architecture supports THUMB mode
#
cdl_interface CYGINT_HAL_ARM_THUMB_ARCH {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_THUMB
    #     ActiveIf:  CYGINT_HAL_ARM_THUMB_ARCH != 0 
    # option CYGBLD_ARM_ENABLE_THUMB_INTERWORK
    #     ActiveIf:  CYGINT_HAL_ARM_THUMB_ARCH != 0 
};

# Enable Thumb instruction set
# Enable use of the Thumb instruction set.
#
cdl_option CYGHWR_THUMB {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_ARM_THUMB_ARCH != 0 
    #     CYGINT_HAL_ARM_THUMB_ARCH == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGBLD_ARM_ENABLE_THUMB_INTERWORK
    #     DefaultValue:  (CYGHWR_THUMB || CYGSEM_HAL_ROM_MONITOR) 
};

# Enable Thumb interworking compiler option
# This option controls the use of -mthumb-interwork in the
# compiler flags. It defaults enabled in Thumb or ROM monitor
# configurations, but can be overridden for reduced memory
# footprint where interworking is not a requirement.
#
cdl_option CYGBLD_ARM_ENABLE_THUMB_INTERWORK {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_ARM_THUMB_ARCH != 0 
    #     CYGINT_HAL_ARM_THUMB_ARCH == 0
    #   --> 0

    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  (CYGHWR_THUMB || CYGSEM_HAL_ROM_MONITOR) 
    #     CYGHWR_THUMB == 0
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #   --> 1
};

# The platform and architecture supports Big Endian operation
#
cdl_interface CYGINT_HAL_ARM_BIGENDIAN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_BIGENDIAN
    #     ActiveIf:  CYGINT_HAL_ARM_BIGENDIAN != 0 
};

# Use big-endian mode
# Use the CPU in big-endian mode.
#
cdl_option CYGHWR_HAL_ARM_BIGENDIAN {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_ARM_BIGENDIAN != 0 
    #     CYGINT_HAL_ARM_BIGENDIAN == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# The platform uses a processor with an ARM7 core
#
cdl_interface CYGINT_HAL_ARM_ARCH_ARM7 {
    # Implemented by CYGPKG_HAL_ARM_EDB7XXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     LegalValues:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "unknown" 
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     DefaultValue:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
};

# The platform uses a processor with an ARM9 core
#
cdl_interface CYGINT_HAL_ARM_ARCH_ARM9 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     LegalValues:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "unknown" 
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     DefaultValue:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
};

# The platform uses a processor with a StrongARM core
#
cdl_interface CYGINT_HAL_ARM_ARCH_STRONGARM {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     LegalValues:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "unknown" 
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     DefaultValue:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
};

# The platform uses a processor with a XScale core
#
cdl_interface CYGINT_HAL_ARM_ARCH_XSCALE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     LegalValues:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "unknown" 
    # option CYGHWR_HAL_ARM_CPU_FAMILY
    #     DefaultValue:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
};

# ARM CPU family
# It is possible to optimize code for different
# ARM CPU families. This option selects which CPU to
# optimize for on boards that support multiple CPU types.
#
cdl_option CYGHWR_HAL_ARM_CPU_FAMILY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ARM7
    # value_source default
    # Default value:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : 
    #                              (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : 
    #                              (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : 
    #                              (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" :
    #                              "unknown" 
    #     CYGINT_HAL_ARM_ARCH_ARM7 == 1
    #     CYGINT_HAL_ARM_ARCH_ARM9 == 0
    #     CYGINT_HAL_ARM_ARCH_STRONGARM == 0
    #     CYGINT_HAL_ARM_ARCH_XSCALE == 0
    #   --> ARM7
    # Legal values:  (CYGINT_HAL_ARM_ARCH_ARM7 != 0) ? "ARM7" : ""
    #                             (CYGINT_HAL_ARM_ARCH_ARM9 != 0) ? "ARM9" : ""
    #                             (CYGINT_HAL_ARM_ARCH_STRONGARM != 0) ? "StrongARM" : ""
    #                             (CYGINT_HAL_ARM_ARCH_XSCALE != 0) ? "XScale" : ""
    #                             "unknown" 
    #     CYGINT_HAL_ARM_ARCH_ARM7 == 1
    #     CYGINT_HAL_ARM_ARCH_ARM9 == 0
    #     CYGINT_HAL_ARM_ARCH_STRONGARM == 0
    #     CYGINT_HAL_ARM_ARCH_XSCALE == 0
};

# Provide diagnostic dump for exceptions
# Print messages about hardware exceptions, including
# raw exception frame dump and register contents.
#
cdl_option CYGHWR_HAL_ARM_DUMP_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 0
};

# Process all exceptions with the eCos application
# Normal RAM-based programs which do not include GDB stubs 
# defer processing of the illegal instruction exception to GDB.
# Setting this options allows the program to explicitly handle
# the illegal instruction exception itself.  Note: this will
# prevent the use of GDB to debug the application as breakpoints
# will no longer work.
#
cdl_option CYGIMP_HAL_PROCESS_ALL_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Linker script
#
cdl_option CYGBLD_LINKER_SCRIPT {
    # Calculated value:  "src/arm.ld" 
    # Flavor: data
    # Current_value: src/arm.ld
};

# Implementations of hal_arm_mem_real_region_top()
#
cdl_interface CYGINT_HAL_ARM_MEM_REAL_REGION_TOP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Cirrus Logic ARM7 based development boards
# The EDB7XXX HAL package provides the support needed to run eCos on Cirrus Logic
# CL-PS7111 and EP7xxx based development boards.
#
cdl_package CYGPKG_HAL_ARM_EDB7XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # package CYGPKG_IO_SERIAL_ARM_EDB7XXX
    #     ActiveIf: CYGPKG_HAL_ARM_EDB7XXX
    # package CYGPKG_DEVS_FLASH_SST
    #     Requires: CYGPKG_HAL_ARM_EDB7XXX
};

# >
# Cirrus Logic processor variant
# The Cirrus Logic processor variant.
#
cdl_option CYGHWR_HAL_ARM_EDB7XXX_VARIANT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value EP7312
    # value_source default
    # Default value: EP7312
    # Legal values:  "CL_PS7111" "EP7209" "EP7211" "EP7212" "EP7312" 

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "CL7111" :  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209" ? "EDB7209" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7211" ? "EDB7211" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7212" ? "EDB7212" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7312" ? "DHARMA" :    "" 
    # option CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "CL7111" :  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209" ? "EDB7209" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7211" ? "EDB7211" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7212" ? "EDB7212" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7312" ? "DHARMA" :    "" 
    # option CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "CL7111" :  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209" ? "EDB7209" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7211" ? "EDB7211" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7212" ? "EDB7212" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7312" ? "DHARMA" :    "" 
    # option CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "CL7111" :  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209" ? "EDB7209" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7211" ? "EDB7211" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7212" ? "EDB7212" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7312" ? "DHARMA" :    "" 
    # option CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "CL7111" :  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209" ? "EDB7209" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7211" ? "EDB7211" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7212" ? "EDB7212" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7312" ? "DHARMA" :    "" 
    # component CYG_HAL_STARTUP
    #     LegalValues:  "ROM"
    #                             ((CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209") ? "" : "RAM")
    #             
    # component CYG_HAL_STARTUP
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209" ? "ROM" : "RAM"
    # option CYGHWR_HAL_ARM_EDB7XXX_PROCESSOR_CLOCK
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? 18432 : 73728 
    # option CYGBLD_GLOBAL_CFLAGS
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "-mcpu=arm710c -Wall -Wpointer-arith -Wstrict-prototypes -Winline -Wundef -Woverloaded-virtual -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions -fvtable-gc -finit-priority" :  "-mcpu=arm7tdmi -Wall -Wpointer-arith -Wstrict-prototypes -Winline -Wundef -Woverloaded-virtual -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions -fvtable-gc -finit-priority" 
    # option CYGBLD_GLOBAL_LDFLAGS
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "-mcpu=arm710c -Wl,--gc-sections -Wl,-static -g -nostdlib" : "-mcpu=arm7tdmi -Wl,--gc-sections -Wl,-static -g -nostdlib"
};

# Cirrus Logic board variant
# The board type which uses a Cirrus Logic processor variant.
#
cdl_option CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value DHARMA
    # value_source default
    # Default value:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? "CL7111" :  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209" ? "EDB7209" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7211" ? "EDB7211" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7212" ? "EDB7212" :    CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7312" ? "DHARMA" :    "" 
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #   --> DHARMA
    # Legal values:  "CL7111" "EDB7209" "EDB7211" "EDB7212" "EDB7312" "DHARMA" "DHARMA_V2" 

    # The following properties are affected by this value
    # option CYGHWR_HAL_ARM_EDB7XXX_DRAM_SIZE
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 2 :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 0 : 16 
    # option CYGHWR_HAL_ARM_EDB7XXX_DRAM_SIZE
    #     DefaultValue:  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 2 :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 0 : 16 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
};

# Startup type
# When targetting the Cirrus Logic evaluation boards it is possible to build
# the system for either RAM bootstrap or ROM bootstrap(s). Select
# 'ram' when building programs to load into RAM using onboard
# debug software such as Angel or eCos GDB stubs.  Select 'rom'
# when building a stand-alone application which will be put
# into ROM.
#
cdl_component CYG_HAL_STARTUP {
    # Flavor: data
    user_value ROM
    # value_source user
    # Default value:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209" ? "ROM" : "RAM"
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #   --> RAM
    # Legal values:  "ROM"
    #                             ((CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "EP7209") ? "" : "RAM")
    #             
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312

    # The following properties are affected by this value
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires:  (CYG_HAL_STARTUP == "ROM") || (CYG_HAL_STARTUP == "ROMRAM") 
    # option CYGBLD_BUILD_GDB_STUBS
    #     Requires:  (CYG_HAL_STARTUP == "ROM") || (CYG_HAL_STARTUP == "ROMRAM") 
    # option CYGBLD_BUILD_FLASH_TOOL
    #     Requires:  CYG_HAL_STARTUP == "RAM" 
    # option CYGBLD_BUILD_AUX_TESTS
    #     Requires:  CYG_HAL_STARTUP == "RAM" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  (CYG_HAL_STARTUP == "ROM") || (CYG_HAL_STARTUP == "ROMRAM") 
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  (CYG_HAL_STARTUP == "ROM") || (CYG_HAL_STARTUP == "ROMRAM") 
    # option CYGSEM_HAL_USE_ROM_MONITOR
    #     DefaultValue:  CYG_HAL_STARTUP == "RAM" ? "GDB_stubs" : 0 
    # option CYGSEM_HAL_USE_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "RAM" 
    # option CYGSEM_HAL_INSTALL_MMU_TABLES
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" 
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     DefaultValue:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR || CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_NOT_GUARANTEED 
    # option CYGBLD_BUILD_REDBOOT_WITH_THREADS
    #     ActiveIf:  CYG_HAL_STARTUP != "RAM" 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     ActiveIf:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "ROMRAM" 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     ActiveIf:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "ROMRAM" 
};

# Diagnostic serial port baud rate
# This option selects the baud rate used for the diagnostic port.
# Note: this should match the value chosen for the GDB port if the
# diagnostic and GDB port are the same.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD {
    # Flavor: data
    user_value 57600
    # value_source user
    # Default value: 115200
    # Legal values: 9600 19200 38400 57600 115200
};

# GDB serial port baud rate
# This option controls the baud rate used for the GDB connection.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_BAUD {
    # Flavor: data
    user_value 57600
    # value_source user
    # Default value: 115200
    # Legal values: 9600 19200 38400 57600 115200
};

# Number of communication channels on the board
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS {
    # Calculated value: 2
    # Flavor: data
    # Current_value: 2

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_DEFAULT
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    # option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
};

# Default console channel.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_DEFAULT {
    # Calculated value: 0
    # Flavor: data
    # Current_value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 2
};

# Debug serial port
# The EDB7xxx boards have two serial ports. This option
# chooses which port will be used to connect to a host
# running GDB.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL {
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE == 1
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 2
};

# Diagnostic serial port
# The EDB7xxx boards have two serial ports.  This option
# chooses which port will be used for diagnostic output.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL {
    # This option is not active
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 2
};

# Processor clock rate
# The processor can run at various frequencies.
#
cdl_option CYGHWR_HAL_ARM_EDB7XXX_PROCESSOR_CLOCK {
    # Flavor: data
    user_value 90000
    # value_source user
    # Default value:  CYGHWR_HAL_ARM_EDB7XXX_VARIANT == "CL_PS7111" ? 18432 : 73728 
    #     CYGHWR_HAL_ARM_EDB7XXX_VARIANT == EP7312
    #   --> 73728
    # Legal values: 18432 36864 49152 73728 90000

    # The following properties are affected by this value
    # option CYGNUM_HAL_RTC_PERIOD
    #     Calculated: (CYGHWR_HAL_ARM_EDB7XXX_PROCESSOR_CLOCK == 90000 ? 6272 : 5120)
};

# Installed DRAM on board
# The Cirrus Logic boards can have various amounts of DRAM installed.
# The machine needs to be initialized differently, depending
# upon the amount installed.
#
cdl_option CYGHWR_HAL_ARM_EDB7XXX_DRAM_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value:  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 2 :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 0 : 16 
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #   --> 16
    # Legal values: 0 2 16
};

# Perform DRAM refresh in software
# This option will add code that refreshes the DRAM by
# touching all of DRAM during the system clock interrupt
# processing.
#
cdl_option CYGHWR_HAL_ARM_EDB7XXX_SOFTWARE_DRAM_REFRESH {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# LCD installed
# If an LCD panel is installed, 128K of DRAM will be dedicated to the
# LCD buffer by the system intialization.  Note: changing this value
# from the default will alter the memory map and a new debug enviroment
# (GDB or RedBoot) may be required.
#
cdl_option CYGHWR_HAL_ARM_EDB7XXX_LCD_INSTALLED {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Debug startup
# If this option is enabled, serial output will be generated indicating
# initialization progress through the bootstrap code in vectors.S. Note
# that this causes slightly slower performance, but may be helpful in
# debugging device initialization.
#
cdl_option CYGHWR_HAL_ARM_EDB7XXX_DEBUG_STARTUP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Real-time clock constants
#
cdl_component CYGNUM_HAL_RTC_CONSTANTS {
    # There is no associated value.
};

# >
# Real-time clock numerator
#
cdl_option CYGNUM_HAL_RTC_NUMERATOR {
    # Calculated value: 1000000000
    # Flavor: data
    # Current_value: 1000000000
};

# Real-time clock denominator
#
cdl_option CYGNUM_HAL_RTC_DENOMINATOR {
    # Calculated value: 100
    # Flavor: data
    # Current_value: 100
};

# Real-time clock period
# 5120 should be chosen in all cases except when running with
# the clock set to 90MHz, then 6272 is the appropriate value.
#
cdl_option CYGNUM_HAL_RTC_PERIOD {
    # Calculated value: (CYGHWR_HAL_ARM_EDB7XXX_PROCESSOR_CLOCK == 90000 ? 6272 : 5120)
    #     CYGHWR_HAL_ARM_EDB7XXX_PROCESSOR_CLOCK == 90000
    # Flavor: data
    # Current_value: 6272
};

# <
# Cirrus Logic build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_HAL_ARM_EDB7XXX_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the Cirrus Logic HAL. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_HAL_ARM_EDB7XXX_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the Cirrus Logic HAL. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_HAL_ARM_EDB7XXX_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Cirrus Logic tests
# This option specifies the set of tests for the Cirrus Logic HAL.
#
cdl_option CYGPKG_HAL_ARM_EDB7XXX_TESTS {
    # Calculated value:  "tests/dram_test" 
    # Flavor: data
    # Current_value: tests/dram_test
};

# <
# Memory layout
#
cdl_component CYGHWR_MEMORY_LAYOUT {
    # Calculated value:  
    #               CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_cl7111_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_cl7111_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ? 
    #                 (CYG_HAL_STARTUP == "ROM" ? "arm_edb7209_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7211_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7211_rom" : "BOGUS.mlt" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ? 
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7212_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7212_rom" : "BOGUS.mlt" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                 (CYG_HAL_STARTUP == "RAM" ? "arm_edb7312_ram" :  CYG_HAL_STARTUP == "ROM" ? "arm_edb7312_rom" : "BOGUS.mlt" ) :  "BOGUS.mlt" 
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HWR_HAL_ARM_EDB7XXX_BOARD_VARIANT (unknown) == 0
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    # Flavor: data
    # Current_value: BOGUS.mlt
};

# >
# Memory layout linker script fragment
#
cdl_option CYGHWR_MEMORY_LAYOUT_LDI {
    # Calculated value:  
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.ldi>" :  "BOGUS.ldi" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.ldi>" :  "BOGUS.ldi" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.ldi>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.ldi>" :  "BOGUS.ldi" ) :  "BOGUS.ldi" 
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    # Flavor: data
    # Current_value: <pkgconf/mlt_arm_edb7312_rom.ldi>
};

# Memory layout header file
#
cdl_option CYGHWR_MEMORY_LAYOUT_H {
    # Calculated value: 
    #                   CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "CL7111" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_cl7111_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_cl7111_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7209" ?
    #                     (CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7209_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7211" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7211_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7211_rom.h>" :  "BOGUS.h" ) :  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7212" ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7212_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7212_rom.h>" :  "BOGUS.h" ) :  (CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "EDB7312" || CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA" ||  CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == "DHARMA_V2") ?
    #                     (CYG_HAL_STARTUP == "RAM" ? "<pkgconf/mlt_arm_edb7312_ram.h>" :   CYG_HAL_STARTUP == "ROM" ? "<pkgconf/mlt_arm_edb7312_rom.h>" :  "BOGUS.h" ) :  "BOGUS.h" 
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYGHWR_HAL_ARM_EDB7XXX_BOARD_VARIANT == DHARMA
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    # Flavor: data
    # Current_value: <pkgconf/mlt_arm_edb7312_rom.h>
};

# <
# <
# <
# <
# Infrastructure
# Common types and useful macros.
# Tracing and assertion facilities.
# Package startup options.
#
cdl_package CYGPKG_INFRA {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # package CYGPKG_HAL
    #     Requires: CYGPKG_INFRA
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGPKG_INFRA
};

# >
# Asserts & Tracing
# The eCos source code contains a significant amount of
# internal debugging support, in the form of assertions and
# tracing.
# Assertions check at runtime that various conditions are as
# expected; if not, execution is halted.
# Tracing takes the form of text messages that are output
# whenever certain events occur, or whenever functions are
# called or return.
# The most important property of these checks and messages is
# that they are not required for the program to run.
# It is prudent to develop software with assertions enabled,
# but disable them when making a product release, thus
# removing the overhead of that checking.
# It is possible to enable assertions and tracing
# independently.
# There are also options controlling the exact behaviour of
# the assertion and tracing facilities, thus giving users
# finer control over the code and data size requirements.
#
cdl_component CYGPKG_INFRA_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Use asserts
# If this option is defined, asserts in the code are tested.
# Assert functions (CYG_ASSERT()) are defined in
# 'include/cyg/infra/cyg_ass.h' within the 'install' tree.
# If it is not defined, these result in no additional
# object code and no checking of the asserted conditions.
#
cdl_component CYGDBG_USE_ASSERTS {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    #     CYGINT_INFRA_DEBUG_TRACE_IMPL == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG
    #     Requires: CYGDBG_USE_ASSERTS
    # option CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG
    #     DefaultValue:  0 != CYGDBG_USE_ASSERTS 
};

# >
# Preconditions
# This option allows individual control of preconditions.
# A precondition is one type of assert, which it is
# useful to control separately from more general asserts.
# The function is CYG_PRECONDITION(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_PRECONDITIONS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Postconditions
# This option allows individual control of postconditions.
# A postcondition is one type of assert, which it is
# useful to control separately from more general asserts.
# The function is CYG_POSTCONDITION(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_POSTCONDITIONS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Loop invariants
# This option allows individual control of loop invariants.
# A loop invariant is one type of assert, which it is
# useful to control separately from more general asserts,
# particularly since a loop invariant is typically evaluated
# a great many times when used correctly.
# The function is CYG_LOOP_INVARIANT(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_LOOP_INVARIANTS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use assert text
# All assertions within eCos contain a text message
# which should give some information about the condition
# being tested.
# These text messages will end up being embedded in the
# application image and hence there is a significant penalty
# in terms of image size.
# It is possible to suppress the use of these messages by
# disabling this option.
# This results in smaller code size, but there is less
# human-readable information if an assertion actually gets
# triggered.
#
cdl_option CYGDBG_INFRA_DEBUG_ASSERT_MESSAGE {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use tracing
# If this option is defined, tracing operations
# result in output or logging, depending on other options.
# This may have adverse effects on performance, if the time
# taken to output message overwhelms the available CPU
# power or output bandwidth.
# Trace functions (CYG_TRACE()) are defined in
# 'include/cyg/infra/cyg_trac.h' within the 'install' tree.
# If it is not defined, these result in no additional
# object code and no trace information.
#
cdl_component CYGDBG_USE_TRACING {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    #     CYGINT_INFRA_DEBUG_TRACE_IMPL == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT
    #     ActiveIf: CYGDBG_USE_TRACING
};

# >
# Trace function reports
# This option allows individual control of
# function entry/exit tracing, independent of
# more general tracing output.
# This may be useful to remove clutter from a
# trace log.
#
cdl_option CYGDBG_INFRA_DEBUG_FUNCTION_REPORTS {
    # This option is not active
    # The parent CYGDBG_USE_TRACING is not active
    # The parent CYGDBG_USE_TRACING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use trace text
# All trace calls within eCos contain a text message
# which should give some information about the circumstances.
# These text messages will end up being embedded in the
# application image and hence there is a significant penalty
# in terms of image size.
# It is possible to suppress the use of these messages by
# disabling this option.
# This results in smaller code size, but there is less
# human-readable information available in the trace output,
# possibly only filenames and line numbers.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_MESSAGE {
    # This option is not active
    # The parent CYGDBG_USE_TRACING is not active
    # The parent CYGDBG_USE_TRACING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Trace output implementations
#
cdl_interface CYGINT_INFRA_DEBUG_TRACE_IMPL {
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER, inactive, enabled
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGDBG_USE_ASSERTS
    #     Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    # component CYGDBG_USE_TRACING
    #     Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
};

# Null output
# A null output module which is useful when
# debugging interactively; the output routines
# can be breakpointed rather than have them actually
# 'print' something.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Simple output
# An output module which produces simple output
# from tracing and assertion events.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Fancy output
# An output module which produces fancy output
# from tracing and assertion events.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Buffered tracing
# An output module which buffers output
# from tracing and assertion events. The stored
# messages are output when an assert fires, or
# CYG_TRACE_PRINT() (defined in <cyg/infra/cyg_trac.h>)
# is called.
# Of course, there will only be stored messages
# if tracing per se (CYGDBG_USE_TRACING)
# is enabled above.
#
cdl_component CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Trace buffer size
# The size of the trace buffer. This counts the number
# of trace records stored. When the buffer fills it
# either wraps, stops recording, or generates output.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 5 to 65535
};

# Wrap trace buffer when full
# When the trace buffer has filled with records it
# starts again at the beginning. Hence only the last
# CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE messages will
# be recorded.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Halt trace buffer when full
# When the trace buffer has filled with records it
# stops recording. Hence only the first
# CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE messages will
# be recorded.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Print trace buffer when full
# When the trace buffer has filled with records it
# prints the contents of the buffer. The buffer is then
# emptied and the system continues.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Print trace buffer on assert fail
# When an assertion fails the trace buffer will be 
# printed to the default diagnostic device.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use function names
# All trace and assert calls within eCos contain a
# reference to the builtin macro '__PRETTY_FUNCTION__',
# which evaluates to a string containing
# the name of the current function.
# This is useful when reading a trace log.
# It is possible to suppress the use of the function name
# by disabling this option.
# This results in smaller code size, but there is less
# human-readable information available in the trace output,
# possibly only filenames and line numbers.
#
cdl_option CYGDBG_INFRA_DEBUG_FUNCTION_PSEUDOMACRO {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Startup options
# Some packages require a startup routine to be called.
# This can be carried out by application code, by supplying
# a routine called cyg_package_start() which calls the
# appropriate package startup routine(s).
# Alternatively, this routine can be constructed automatically
# and configured to call the startup routines of your choice.
#
cdl_component CYGPKG_INFRA_STARTUP {
    # There is no associated value.
};

# >
# Start uITRON subsystem
# Generate a call to initialize the
# uITRON compatibility subsystem
# within the system version of cyg_package_start().
# This enables compatibility with uITRON.
# You must configure uITRON with the correct tasks before
# starting the uItron subsystem.
# If this is disabled, and you want to use uITRON,
# you must call cyg_uitron_start() from your own
# cyg_package_start() or cyg_userstart().
#
cdl_option CYGSEM_START_UITRON_COMPATIBILITY {
    # This option is not active
    # ActiveIf constraint: CYGPKG_UITRON
    #     CYGPKG_UITRON (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGPKG_UITRON
    #     CYGPKG_UITRON (unknown) == 0
    #   --> 0
};

# <
# Smaller slower memcpy()
# Enabling this option causes the implementation of
# the standard memcpy() routine to reduce code
# size at the expense of execution speed. This
# option is automatically enabled with the use of
# the -Os option to the compiler. Also note that
# the compiler will try to use its own builtin
# version of memcpy() if possible, ignoring the
# implementation in this package, unless given
# the -fno-builtin compiler option.
#
cdl_option CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMCPY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Smaller slower memset()
# Enabling this option causes the implementation of
# the standard memset() routine to reduce code
# size at the expense of execution speed. This
# option is automatically enabled with the use of
# the -Os option to the compiler. Also note that
# the compiler will try to use its own builtin
# version of memset() if possible, ignoring the
# implementation in this package, unless given
# the -fno-builtin compiler option.
#
cdl_option CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMSET {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide empty C++ delete functions
# To deal with virtual destructors, where the correct delete()
# function must be called for the derived class in question, the
# underlying delete is called when needed, from destructors.  This
# is regardless of whether the destructor is called by delete itself.
# So there is a reference to delete() from all destructors.  The
# default builtin delete() attempts to call free() if there is
# one defined.  So, if you have destructors, and you have free(),
# as in malloc() and free(), any destructor counts as a reference
# to free().  So the dynamic memory allocation code is linked
# in regardless of whether it gets explicitly called. This
# increases code and data size needlessly.
# To defeat this undesirable behaviour, we define empty versions
# of delete and delete.  But doing this prevents proper use
# of dynamic memory in C++ programs via C++'s new and delete
# operators.
# Therefore, this option is provided
# for explicitly disabling the provision of these empty functions,
# so that new and delete can be used, if that is what is required.
#
cdl_option CYGFUN_INFRA_EMPTY_DELETE_FUNCTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Infra build options
# Package specific build options including control over
# compiler flags used only in building this package.
#
cdl_component CYGPKG_INFRA_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the eCos infra package. These flags are used
# in addition to the set of global flags.
#
cdl_option CYGPKG_INFRA_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the eCos infra package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# Redboot ROM monitor
# This package supports the Redboot [stand-alone debug monitor]
# using eCos as the underlying board support mechanism.
#
cdl_package CYGPKG_REDBOOT {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_HAL_OPTIONS
    #     ActiveIf: CYGPKG_REDBOOT
};

# >
# Build Redboot ROM ELF image
# This option enables the building of the Redboot ELF image.
# The image may require further relocation or symbol
# stripping before being converted to a binary image.
# This is handled by a rule in the target CDL.
#
cdl_component CYGBLD_BUILD_REDBOOT {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0
    # Requires: CYGPKG_INFRA
    #     CYGPKG_INFRA == current
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
    # Requires:  !CYGINT_HAL_DEBUG_GDB_STUBS || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGINT_HAL_DEBUG_GDB_STUBS == 1
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # Requires:  !CYGINT_HAL_DEBUG_GDB_STUBS || CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT 
    #     CYGINT_HAL_DEBUG_GDB_STUBS == 1
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 1
    #   --> 1
    # Requires: ! CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    #     CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    #     CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM == 0
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1
    # Requires: CYGINT_ISO_STRING_MEMFUNCS
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1
    # Requires: CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_BUILD_REDBOOT_BIN
    #     ActiveIf: CYGBLD_BUILD_REDBOOT
};

# >
# Include support gzip/zlib decompression
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_ZLIB {
    # ActiveIf constraint: CYGPKG_COMPRESS_ZLIB
    #     CYGPKG_COMPRESS_ZLIB == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Threads debugging support
# Enabling this option will include special code in the GDB stubs to
# support debugging of threaded programs.  In the case of eCos programs,
# this support allows GDB to have complete access to the eCos threads
# in the program.
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_THREADS {
    # ActiveIf constraint:  CYG_HAL_STARTUP != "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT == 1
    #   --> 1
};

# Build redboot with weakly linked cyg_start
# Linking against the redboot libs requires a weakly 
# entry point that can be redefined later. 
# WARNING: This breaks the normal redboot bin 
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_WEAK_CYGSTART {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Customized version string
# Use this option to define a customized version "string" for
# RedBoot.  Note: this value is only cosmetic, displayed by the
# "version" command, but is useful for providing site specific
# information about the RedBoot configuration.
#
cdl_option CYGDAT_REDBOOT_CUSTOM_VERSION {
    # Flavor: booldata
    user_value 0 "version 0.2 (sst-internal)"
    # value_source user
    # Default value: 0 0
};

# Enable command line editing
# If this option is non-zero, RedBoot will remember the last N command
# lines.  These lines may be reused.  Enabling this history will also
# enable rudimentary editting of the lines themselves.
#
cdl_option CYGNUM_REDBOOT_CMD_LINE_EDITING {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
};

# <
# Redboot Networking
# This option includes networking support in RedBoot.
#
cdl_component CYGPKG_REDBOOT_NETWORKING {
    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS (unknown) == 0
    #   --> 0

    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# >
# Print net debug information
# This option is overriden by the configuration stored in flash.
#
cdl_option CYGDBG_REDBOOT_NET_DEBUG {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING is not active
    # The parent CYGPKG_REDBOOT_NETWORKING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Default IP address
# This IP address is the default used by RedBoot if a BOOTP/DHCP
# server does not respond. The numbers should be separated by
# *commas*, and not dots. If an IP address is configured into
# the Flash configuration, that will be used in preference.
#
cdl_component CYGDAT_REDBOOT_DEFAULT_IP_ADDR {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING is not active
    # The parent CYGPKG_REDBOOT_NETWORKING is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 0 0
};

# >
# Do not try to use BOOTP
# By default Redboot tries to use BOOTP to get an IP
# address. If there's no BOOTP server on your network
# use this option to avoid to wait until the
# timeout. This option is overriden by the
# configuration stored in flash.
#
cdl_option CYGSEM_REDBOOT_DEFAULT_NO_BOOTP {
    # This option is not active
    # The parent CYGDAT_REDBOOT_DEFAULT_IP_ADDR is not active
    # The parent CYGDAT_REDBOOT_DEFAULT_IP_ADDR is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# TCP port to listen for incoming connections
# RedBoot will 'listen' on this port for incoming TCP connections.
# This allows outside connections to be made to the platform, either
# for GDB or RedBoot commands.
#
cdl_option CYGNUM_REDBOOT_NETWORKING_TCP_PORT {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING is not active
    # The parent CYGPKG_REDBOOT_NETWORKING is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 9000
    # value_source default
    # Default value: 9000
};

# Number of [network] packet buffers
# RedBoot may need to buffer network data to support various connections.
# This option allows control over the number of such buffered packets,
# and in turn, controls the amount of memory used by RedBoot (which
# is not available to user applications).  Each packet buffer takes up
# about 1514 bytes.  Note: there is little need to make this larger
# than the default.
#
cdl_option CYGNUM_REDBOOT_NETWORKING_MAX_PKTBUF {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING is not active
    # The parent CYGPKG_REDBOOT_NETWORKING is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
    # Legal values: 3 to 8
};

# <
# Redboot demojumper support
# This option includes demojumper support in RedBoot.
#
cdl_component CYGPKG_REDBOOT_DEMOJUMPER {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Use large LCD driver
# Demojumper will run on large lcd.
#
cdl_option CYGPKG_REDBOOT_DEMOJUMPER_LARGE_LCD {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DEMOJUMPER is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Standalone RedBoot USB support
# This option includes USB support in RedBoot.
#
cdl_component CYGPKG_REDBOOT_USB {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Allow RedBoot to use any I/O channel for it's console.
# If this option is enabled then RedBoot will attempt to use all
# defined serial I/O channels for it's console device.  Once input
# arrives at one of these channels then the console will use only
# that port.
#
cdl_option CYGPKG_REDBOOT_ANY_CONSOLE {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Allow RedBoot to adjust the baud rate on the serial console.
# If this option is enabled then RedBoot will support commands to set
# and query the baud rate on the selected console.
#
cdl_option CYGSEM_REDBOOT_VARIABLE_BAUD_RATE {
    # This option is not active
    # ActiveIf constraint: CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT
    #     CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Maximum command line length
# This option allows control over how long the CLI command line
# should be.  This space will be allocated statically
# rather than from RedBoot's stack.
#
cdl_option CYGPKG_REDBOOT_MAX_CMD_LINE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 256
    # value_source default
    # Default value: 256
};

# Command processing idle timeout (ms)
# This option controls the timeout period before the
# command processing is considered 'idle'.  Making this
# number smaller will cause idle processing to take place
# more often, etc.  The default value of 10ms is a reasonable
# tradeoff between responsiveness and overhead.
#
cdl_option CYGNUM_REDBOOT_CLI_IDLE_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
};

# Size of zlib decompression buffer
# This is the size of the buffer filled with incoming data
# during load before calls are made to the decompressor
# function. For ethernet downloads this can be made bigger
# (at the cost of memory), but for serial downloads on slow
# processors it may be necessary to reduce the size to
# avoid serial overruns. zlib appears to bail out if less than
# five bytes are available initially so this is the minimum.
#
cdl_option CYGNUM_REDBOOT_LOAD_ZLIB_BUFFER {
    # ActiveIf constraint: CYGPKG_COMPRESS_ZLIB
    #     CYGPKG_COMPRESS_ZLIB == current
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 64
    # value_source default
    # Default value: 64
    # Legal values: 5 to 256
};

# Allow RedBoot to scan keyboard at startup
# If this option is enabled then RedBoot will scan the
# keyboard at startup for pressed keys.
#
cdl_component CYGPKG_REDBOOT_KBD {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Validate RAM addresses during load
# This option controls whether or not RedBoot will make sure that
# memory being used by the "load" command is in fact in user RAM.
# Leaving the option enabled makes for a safer environment, but this
# check may not be valid on all platforms, thus the ability to
# disable it.  ** Disable this only with great care **
#
cdl_option CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Allow RedBoot to support FLASH programming
# If this option is enabled then RedBoot will provide commands
# to manage images in FLASH memory.  These images can be loaded
# into memory for execution or executed in place.
#
cdl_component CYGPKG_REDBOOT_FLASH {
    # ActiveIf constraint: CYGHWR_IO_FLASH_DEVICE
    #     CYGHWR_IO_FLASH_DEVICE == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Minimum image size
# This option controls the minimum length of images kept by
# the FIS.  In particular, it should be large enough to hold
# the RedBoot primary image itself, as well as be a natural
# multiple of the FLASH erase block size.
#
cdl_option CYGBLD_REDBOOT_MIN_IMAGE_SIZE {
    # Flavor: data
    user_value 0x00010000
    # value_source user
    # Default value: 0x00020000
};

# Offset from start of FLASH to RedBoot boot image
# This option controls where the RedBoot boot image is located
# relative to the start of FLASH.
#
cdl_option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGNUM_REDBOOT_FLASH_RESERVED_BASE
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #   --> 0
    # Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #     CYGBLD_REDBOOT_FLASH_BOOT_OFFSET == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    # option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
};

# Size of reserved area at start of FLASH
# This option reserves an area at the start of FLASH where RedBoot
# will never interfere; it is expected that this area contains
# (non-RedBoot-based) POST code or some other boot monitor that
# executes before RedBoot.
#
cdl_option CYGNUM_REDBOOT_FLASH_RESERVED_BASE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     DefaultValue: CYGNUM_REDBOOT_FLASH_RESERVED_BASE
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    # option CYGOPT_REDBOOT_FIS_RESERVED_BASE
    #     ActiveIf:  0 != CYGNUM_REDBOOT_FLASH_RESERVED_BASE 
};

# RedBoot Flash Image System support
# This option enables the Flash Image System commands
# and support within RedBoot.  If disabled, simple Flash
# access commands such as "fis write" will still exist.
# This option would be disabled for targets that need simple
# FLASH manipulation, but do not have the need or space for
# complete image management.
#
cdl_option CYGOPT_REDBOOT_FIS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_FIS_CONTENTS
    #     ActiveIf: CYGOPT_REDBOOT_FIS
};

# Flash Image System default directory contents
#
cdl_component CYGPKG_REDBOOT_FIS_CONTENTS {
    # ActiveIf constraint: CYGOPT_REDBOOT_FIS
    #     CYGOPT_REDBOOT_FIS == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# >
# Flash block containing the Directory
# Which block of flash should hold the directory 
# information. Positive numbers are absolute block numbers. 
# Negative block numbers count backwards from the last block.
# eg 2 means block 2, -2 means the last but one block.
#
cdl_option CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -1
    # value_source default
    # Default value: -1
};

# Pseudo-file to describe reserved area
# If an area of FLASH is reserved, it is informative to
# have a fis entry describing it.  This option controls
# creation of such an entry by default in the fis init
# command.
#
cdl_option CYGOPT_REDBOOT_FIS_RESERVED_BASE {
    # This option is not active
    # ActiveIf constraint:  0 != CYGNUM_REDBOOT_FLASH_RESERVED_BASE 
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# File to describe RedBoot boot image
# Normally a ROM-startup RedBoot image is first in the
# FLASH, and the system boots using that image.  This
# option controls creation of an entry describing it in
# the fis init command.  It might be disabled if a
# platform has an immutable boot image of its own, where
# we use a POST-startup RedBoot instead, which performs
# less board initialization.
#
cdl_option CYGOPT_REDBOOT_FIS_REDBOOT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGOPT_REDBOOT_FIS_REDBOOT_POST
    #     DefaultValue: !CYGOPT_REDBOOT_FIS_REDBOOT
};

# File to describe RedBoot POST-compatible image
# This option controls creation of an entry describing a
# POST-startup RedBoot image in the fis init command.
# Not all platforms support POST-startup.  A platform
# might have both for testing purposes, where the
# eventual user would substitute their own POST code for
# the initial ROM-startup RedBoot, and then jump to the
# POST-compatible RedBoot immediately following.
#
cdl_component CYGOPT_REDBOOT_FIS_REDBOOT_POST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: !CYGOPT_REDBOOT_FIS_REDBOOT
    #     CYGOPT_REDBOOT_FIS_REDBOOT == 1
    #   --> 0
};

# >
# Offset of POST image from FLASH start
# This option specifies the offset for a POST image from
# the start of FLASH.  If unset, then the fis entry
# describing the POST image will be placed where
# convenient.
#
cdl_option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET {
    # This option is not active
    # The parent CYGOPT_REDBOOT_FIS_REDBOOT_POST is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
    # Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    #     CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET == 0
    #     CYGBLD_REDBOOT_FLASH_BOOT_OFFSET == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
};

# <
# File to describe RedBoot backup image
# This option controls creation of an entry describing a
# backup RedBoot image in the fis init command.
# Conventionally a RAM-startup RedBoot image is kept
# under this name for use in updating the ROM-based
# RedBoot that boots the board.
#
cdl_option CYGOPT_REDBOOT_FIS_REDBOOT_BACKUP {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 1
};

# Include ARM SIB ID in FIS
# If set, this option will cause the last 5 words of
# the FIS to include the special ID needed for the
# flash to be recognized as a reserved area for RedBoot
# by an ARM BootRom monitor.
#
cdl_option CYGOPT_REDBOOT_FIS_DIRECTORY_ARM_SIB_ID {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Keep RedBoot configuration data in FLASH
# When this option is enabled, RedBoot will keep configuration
# data in a separate block of FLASH memory.  This data will
# include such items as the node IP address or startup scripts.
#
cdl_component CYGSEM_REDBOOT_FLASH_CONFIG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGDAT_REDBOOT_DEFAULT_IP_ADDR
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    # option CYGFUN_REDBOOT_BOOT_SCRIPT
    #     ActiveIf:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
};

# >
# Length of configuration data in FLASH
# This option is used to control the amount of memory and FLASH
# to be used for configuration options (persistent storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_CONFIG_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4096
    # value_source default
    # Default value: 4096
};

# Which block of flash to use
# Which block of flash should hold the configuration 
# information. Positive numbers are absolute block numbers. 
# Negative block numbers count backwards from the last block.
# eg 2 means block 2, -2 means the last but one block.
#
cdl_option CYGNUM_REDBOOT_FLASH_CONFIG_BLOCK {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -2
    # value_source default
    # Default value: -2
};

# Support simple macros/aliases in FLASH
# This option is used to allow support for simple text-based
# macros (aliases).  These aliases are kept in the FLASH
# configuration data (persistent storage).
#
cdl_option CYGSEM_REDBOOT_FLASH_ALIASES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Length of strings in FLASH configuration data
# This option is used to control the amount of memory and FLASH
# to be used for string configuration options (persistent storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_STRING_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
};

# Length of configuration script(s) in FLASH
# This option is used to control the amount of memory and FLASH
# to be used for configuration options (persistent storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_SCRIPT_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
};

# <
# Keep all RedBoot FLASH data blocks locked.
# When this option is enabled, RedBoot will keep configuration
# data and the FIS directory blocks implicitly locked.  While
# this is somewhat safer, it does add overhead during updates.
#
cdl_option CYGSEM_REDBOOT_FLASH_LOCK_SPECIAL {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_IO_FLASH_BLOCK_LOCKING != 0 
    #     CYGHWR_IO_FLASH_BLOCK_LOCKING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use CRC checksums on FIS images.
# When this option is enabled, RedBoot will use CRC checksums
# when reading and writing flash images.
#
cdl_option CYGSEM_REDBOOT_FIS_CRC_CHECK {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# ARM FLASH drivers support SIB flash block structure
# This interface is implemented by a flash driver
# to indicate that it supports the ARM SIB flash
# block structure
#
cdl_interface CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED {
    # No options implement this inferface
    # ActiveIf constraint: CYGPKG_HAL_ARM
    #     CYGPKG_HAL_ARM == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_REDBOOT_ARM_FLASH_SIB
    #     ActiveIf: CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED
};

# Use ARM SIB flash block structure
# This option is used to interpret ARM Flash System information
# blocks.
#
cdl_option CYGHWR_REDBOOT_ARM_FLASH_SIB {
    # This option is not active
    # ActiveIf constraint: CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED
    #     CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Allow RedBoot to support disk reading and writing
# If this option is enabled then RedBoot will provide commands
# to manage images on disk.  These images can be loaded
# into memory for execution.
#
cdl_component CYGPKG_REDBOOT_FAT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Allow RedBoot to support disks
# If this option is enabled then RedBoot will provide commands
# to load disk files.
#
cdl_component CYGPKG_REDBOOT_DISK {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_PLF_IF_IDE != 0 
    #     CYGINT_HAL_PLF_IF_IDE == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Maximum number of supported disks
# This option controls the number of disks supported by RedBoot.
#
cdl_option CYGNUM_REDBOOT_MAX_DISKS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
};

# Maximum number of partitions per disk
# This option controls the maximum number of supported partitions per disk.
#
cdl_option CYGNUM_REDBOOT_MAX_PARTITIONS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
};

# Support IDE disks.
# When this option is enabled, RedBoot will support IDE disks.
#
cdl_component CYGSEM_REDBOOT_DISK_IDE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Support Linux second extended filesystems.
# When this option is enabled, RedBoot will support IDE disks.
#
cdl_component CYGSEM_REDBOOT_DISK_EXT2FS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Support ISO9660 filesystems.
# When this option is enabled, RedBoot will support ISO9660 filesystems.
#
cdl_component CYGSEM_REDBOOT_DISK_ISO9660 {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is not active

    # Calculated value: 0
    # Flavor: bool
    # Current value: 0
};

# <
# Boot scripting
# This contains options related to RedBoot's boot script
# functionality.
#
cdl_component CYGPKG_REDBOOT_BOOT_SCRIPT {
    # There is no associated value.
};

# >
# Boot scripting enabled
# This option controls whether RedBoot boot script
# functionality is enabled.
#
cdl_option CYGFUN_REDBOOT_BOOT_SCRIPT {
    # ActiveIf constraint:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
    #     CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT == 0
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Use default RedBoot boot script
# If enabled, this option will tell RedBoot to use the value of
# this option as a default boot script.
#
cdl_option CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGFUN_REDBOOT_BOOT_SCRIPT
    #     ActiveIf:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
};

# Support timeouts in boot scripts
# If enabled, redboot will allow timeouts to be associated with boot
# scripts. Otherwise, timeouts will be ignored.
#
cdl_option CYGSEM_REDBOOT_BOOT_SCRIPT_TIMEOUTS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Resolution (in ms) for script timeout value.
# This option controls the resolution of the script timeout.
# The value is specified in milliseconds (ms), thus to have the
# script timeout be defined in terms of tenths of seconds, use 100.
#
cdl_option CYGNUM_REDBOOT_BOOT_SCRIPT_TIMEOUT_RESOLUTION {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1000
    # value_source default
    # Default value: 1000
};

# Script default timeout value
# This option is used to set the default timeout for startup
# scripts, when they are enabled.
#
cdl_option CYGNUM_REDBOOT_BOOT_SCRIPT_DEFAULT_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
};

# <
# Behave like a ROM monitor
# Enabling this option will allow RedBoot to provide ROM monitor-style
# services to programs which it executes.
#
cdl_option CYGPRI_REDBOOT_ROM_MONITOR {
    # ActiveIf constraint:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "ROMRAM" 
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
    # Requires: CYGSEM_HAL_ROM_MONITOR
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #   --> 1
};

# Allow RedBoot to handle GNUPro application 'syscalls'.
# If this option is enabled then RedBoot will install a syscall handler
# to support debugging of applications based on GNUPro newlib/bsp.
#
cdl_option CYGSEM_REDBOOT_BSP_SYSCALLS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Redboot HAL options
# This option lists the target's requirements for a valid Redboot
# configuration.
#
cdl_component CYGPKG_REDBOOT_HAL_OPTIONS {
    # ActiveIf constraint: CYGPKG_REDBOOT
    #     CYGPKG_REDBOOT == current
    #   --> 1

    # There is no associated value.
};

# >
# Build Redboot ROM binary image
# This option enables the conversion of the Redboot ELF
# image to a binary image suitable for ROM programming.
#
cdl_option CYGBLD_BUILD_REDBOOT_BIN {
    # ActiveIf constraint: CYGBLD_BUILD_REDBOOT
    #     CYGBLD_BUILD_REDBOOT == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Support booting NetBSD via RedBoot
# This option enables RedBoot to support booting of a NetBSD kernel.
#
cdl_option CYGSEM_REDBOOT_EDB7XXX_NETBSD_BOOT {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# <
# <
# FLASH device drivers
# doc: redirect/ecos-device-drivers.html
# This option enables drivers for basic I/O services on
# flash devices.
#
cdl_package CYGPKG_IO_FLASH {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
    # Requires: CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_DEVS_FLASH_SST
    #     ActiveIf: CYGPKG_IO_FLASH
};

# >
# Extra memory required by FLASH device drivers
# Use this option to control how much extra memory is used
# by the FLASH drivers to perform certain operations. This
# memory is used to hold driver functions in RAM (for platforms
# which require it).  The value should thus be large enough
# to hold any such driver.  Reducing this value will make
# more RAM available to general programs.
#
cdl_option CYGNUM_FLASH_WORKSPACE_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00001000
    # value_source default
    # Default value: 0x00001000
};

# Hardware FLASH device drivers
# This option enables the hardware device drivers
# for the current platform.
#
cdl_interface CYGHWR_IO_FLASH_DEVICE {
    # Implemented by CYGPKG_DEVS_FLASH_SST, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_FLASH
    #     ActiveIf: CYGHWR_IO_FLASH_DEVICE
};

# Hardware FLASH device drivers are not in RAM
# This option makes the IO driver copy the device
# driver functions to RAM before calling them. Newer
# drivers should make sure that the functions are
# linked to RAM by putting them in .2ram sections.
#
cdl_interface CYGHWR_IO_FLASH_DEVICE_NOT_IN_RAM {
    # Implemented by CYGPKG_DEVS_FLASH_SST, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1

    # The following properties are affected by this value
};

# Hardware can support block locking
# This option will be enabled by devices which can support
# locking (write-protection) of individual blocks.
#
cdl_interface CYGHWR_IO_FLASH_BLOCK_LOCKING {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_FLASH_LOCK_SPECIAL
    #     ActiveIf:  CYGHWR_IO_FLASH_BLOCK_LOCKING != 0 
};

# Verify data programmed to flash
# Selecting this option will cause verification of data
# programmed to flash.
#
cdl_option CYGSEM_IO_FLASH_VERIFY_PROGRAM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Platform has flash soft DIP switch write-protect
# Selecting this option will cause the state of a hardware jumper or
# dipswitch to be read by software to determine whether the flash is
# write-protected or not.
#
cdl_option CYGSEM_IO_FLASH_SOFT_WRITE_PROTECT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# IObjects SST FLASH memory support
# FLASH memory device support for devices with SST chips
#
cdl_package CYGPKG_DEVS_FLASH_SST {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_FLASH
    #     CYGPKG_IO_FLASH == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_HAL_ARM_EDB7XXX
    #     CYGPKG_HAL_ARM_EDB7XXX == current
    #   --> 1
};

# <
# Dynamic memory allocation
# This package provides memory allocator infrastructure required for
# dynamic memory allocators, including the ISO standard malloc
# interface. It also contains some sample implementations.
#
cdl_package CYGPKG_MEMALLOC {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # option CYGSEM_COMPRESS_ZLIB_NEEDS_MALLOC
    #     Requires: CYGPKG_MEMALLOC
};

# >
# Memory allocator implementations
# This component contains configuration options related to the 
# various memory allocators available.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATORS {
    # There is no associated value.
};

# >
# Fixed block allocator
# This component contains configuration options related to the 
# fixed block memory allocator.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATOR_FIXED {
    # There is no associated value.
};

# >
# Make thread safe
# With this option enabled, this allocator will be
# made thread-safe. Additionally allocation functions
# are made available that allow a thread to wait
# until memory is available.
#
cdl_option CYGSEM_MEMALLOC_ALLOCATOR_FIXED_THREADAWARE {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Simple variable block allocator
# This component contains configuration options related to the 
# simple variable block memory allocator. This allocator is not
# very fast, and in particular does not scale well with large
# numbers of allocations. It is however very compact in terms of
# code size and does not have very much overhead per allocation.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATOR_VARIABLE {
    # There is no associated value.
};

# >
# Make thread safe
# With this option enabled, this allocator will be
# made thread-safe. Additionally allocation functions
# are added that allow a thread to wait until memory
# are made available that allow a thread to wait
# until memory is available.
#
cdl_option CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_THREADAWARE {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Coalesce memory
# The variable-block memory allocator can perform coalescing
# of memory whenever the application code releases memory back
# to the pool. This coalescing reduces the possibility of
# memory fragmentation problems, but involves extra code and
# processor cycles.
#
cdl_option CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE
    #     Requires: CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE
};

# <
# Doug Lea's malloc
# This component contains configuration options related to the 
# port of Doug Lea's memory allocator, normally known as
# dlmalloc. dlmalloc has a reputation for being both fast
# and space-conserving, as well as resisting fragmentation well.
# It is a common choice for a general purpose allocator and
# has been used in both newlib and Linux glibc.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATOR_DLMALLOC {
    # There is no associated value.
};

# >
# Debug build
# Doug Lea's malloc implementation has substantial amounts
# of internal checking in order to verify the operation
# and consistency of the allocator. However this imposes
# substantial overhead on each operation. Therefore this
# checking may be individually disabled.
#
cdl_option CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  0 != CYGDBG_USE_ASSERTS 
    #     CYGDBG_USE_ASSERTS == 0
    #   --> 0
    # Requires: CYGDBG_USE_ASSERTS
    #     CYGDBG_USE_ASSERTS == 0
    #   --> 0
};

# Make thread safe
# With this option enabled, this allocator will be
# made thread-safe. Additionally allocation functions
# are made available that allow a thread to wait
# until memory is available.
#
cdl_option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_THREADAWARE {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
};

# Support more than one instance
# Having this option disabled allows important
# implementation structures to be declared as a single
# static instance, allowing faster access. However this
# would fail if there is more than one instance of
# the dlmalloc allocator class. Therefore this option can
# be enabled if multiple instances are required. Note: as
# a special case, if this allocator is used as the
# implementation of malloc, and it can be determined there
# is more than one malloc pool, then this option will be
# silently enabled.
#
cdl_option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_SAFE_MULTIPLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use system memcpy() and memset()
# This may be used to control whether memset() and memcpy()
# are used within the implementation. The alternative is
# to use some macro equivalents, which some people report
# are faster in some circumstances.
#
cdl_option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  0 != CYGPKG_ISOINFRA 
    #     CYGPKG_ISOINFRA == current
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
};

# <
# Variable block allocator with separate metadata
# This component contains configuration options related to the 
# variable block memory allocator with separate metadata.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATOR_SEPMETA {
    # There is no associated value.
};

# >
# Make thread safe
# With this option enabled, this allocator will be
# made thread-safe. Additionally allocation functions
# are made available that allow a thread to wait
# until memory is available.
#
cdl_option CYGSEM_MEMALLOC_ALLOCATOR_SEPMETA_THREADAWARE {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# <
# Kernel C API support for memory allocation
# This option must be enabled to provide the extensions required
# to support integration into the kernel C API.
#
cdl_option CYGFUN_MEMALLOC_KAPI {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGFUN_KERNEL_API_C
    #     CYGFUN_KERNEL_API_C (unknown) == 0
    #   --> 0
};

# malloc(0) returns NULL
# This option controls the behavior of malloc(0) ( or calloc with
# either argument 0 ). It is permitted by the standard to return
# either a NULL pointer or a unique pointer. Enabling this option
# forces a NULL pointer to be returned.
#
cdl_option CYGSEM_MEMALLOC_MALLOC_ZERO_RETURNS_NULL {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# malloc() and supporting allocators
# This component enables support for dynamic memory
# allocation as supplied by the functions malloc(),
# free(), calloc() and realloc(). As these
# functions are often used, but can have quite an
# overhead, disabling them here can ensure they
# cannot even be used accidentally when static
# allocation is preferred. Within this component are
# various allocators that can be selected for use
# as the underlying implementation of the dynamic
# allocation functions.
#
cdl_component CYGPKG_MEMALLOC_MALLOC_ALLOCATORS {
    # ActiveIf constraint: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Use external heap definition
# This option allows other components in the
# system to override the default system
# provision of heap memory pools. This should
# be set to a header which provides the equivalent
# definitions to <pkgconf/heaps.hxx>.
#
cdl_component CYGBLD_MEMALLOC_MALLOC_EXTERNAL_HEAP_H {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# malloc() allocator implementations
#
cdl_interface CYGINT_MEMALLOC_MALLOC_ALLOCATORS {
    # Implemented by CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE, active, disabled
    # Implemented by CYGIMP_MEMALLOC_MALLOC_DLMALLOC, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  CYGINT_MEMALLOC_MALLOC_ALLOCATORS == 1 
    #     CYGINT_MEMALLOC_MALLOC_ALLOCATORS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_MEMALLOC_MALLOC_ALLOCATORS
    #     Requires:  CYGINT_MEMALLOC_MALLOC_ALLOCATORS == 1 
};

# malloc() implementation instantiation data
# Memory allocator implementations that are capable of being
# used underneath malloc() must be instantiated. The code
# to do this is set in this option. It is only intended to
# be set by the implementation, not the user.
#
cdl_option CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value <cyg/memalloc/dlmalloc.hxx>
    # value_source default
    # Default value: <cyg/memalloc/dlmalloc.hxx>

    # The following properties are affected by this value
    # option CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE
    #     Requires:  CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER ==  "<cyg/memalloc/memvar.hxx>" 
    # option CYGIMP_MEMALLOC_MALLOC_DLMALLOC
    #     Requires:  CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER ==  "<cyg/memalloc/dlmalloc.hxx>" 
};

# Simple variable block implementation
# This causes malloc() to use the simple
# variable block allocator.
#
cdl_option CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER ==  "<cyg/memalloc/memvar.hxx>" 
    #     CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER == <cyg/memalloc/dlmalloc.hxx>
    #   --> 0
    # Requires: CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE
    #     CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE == 1
    #   --> 1
};

# Doug Lea's malloc implementation
# This causes malloc() to use a version of Doug Lea's
# malloc (dlmalloc) as the underlying implementation.
#
cdl_option CYGIMP_MEMALLOC_MALLOC_DLMALLOC {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER ==  "<cyg/memalloc/dlmalloc.hxx>" 
    #     CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER == <cyg/memalloc/dlmalloc.hxx>
    #   --> 1
};

# <
# Size of the fallback dynamic memory pool in bytes
# If *no* heaps are configured in your memory layout,
# dynamic memory allocation by
# malloc() and calloc() must be from a fixed-size,
# contiguous memory pool (note here that it is the
# pool that is of a fixed size, but malloc() is still
# able to allocate variable sized chunks of memory
# from it). This option is the size
# of that pool, in bytes. Note that not all of
# this is available for programs to
# use - some is needed for internal information
# about memory regions, and some may be lost to
# ensure that memory allocation only returns
# memory aligned on word (or double word)
# boundaries - a very common architecture
# constraint.
#
cdl_option CYGNUM_MEMALLOC_FALLBACK_MALLOC_POOL_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16384
    # value_source default
    # Default value: 16384
    # Legal values: 32 to 0x7fffffff
};

# Common memory allocator package build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_MEMALLOC_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_MEMALLOC_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_MEMALLOC_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Tests
# This option specifies the set of tests for this package.
#
cdl_option CYGPKG_MEMALLOC_TESTS {
    # Calculated value:  "tests/dlmalloc1 tests/dlmalloc2 tests/heaptest tests/kmemfix1 tests/kmemvar1 tests/malloc1 tests/malloc2 tests/malloc3 tests/malloc4 tests/memfix1 tests/memfix2 tests/memvar1 tests/memvar2 tests/realloc tests/sepmeta1 tests/sepmeta2" 
    # Flavor: data
    # Current_value: tests/dlmalloc1 tests/dlmalloc2 tests/heaptest tests/kmemfix1 tests/kmemvar1 tests/malloc1 tests/malloc2 tests/malloc3 tests/malloc4 tests/memfix1 tests/memfix2 tests/memvar1 tests/memvar2 tests/realloc tests/sepmeta1 tests/sepmeta2
};

# <
# <
# Zlib compress and decompress package
# This package provides support for compression and
# decompression.
#
cdl_package CYGPKG_COMPRESS_ZLIB {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_BUILD_REDBOOT_WITH_ZLIB
    #     ActiveIf: CYGPKG_COMPRESS_ZLIB
    # option CYGNUM_REDBOOT_LOAD_ZLIB_BUFFER
    #     ActiveIf: CYGPKG_COMPRESS_ZLIB
};

# >
# Override memory allocation routines.
#
cdl_interface CYGINT_COMPRESS_ZLIB_LOCAL_ALLOC {
    # Implemented by CYGBLD_BUILD_REDBOOT_WITH_ZLIB, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGSEM_COMPRESS_ZLIB_NEEDS_MALLOC
    #     ActiveIf:  CYGINT_COMPRESS_ZLIB_LOCAL_ALLOC == 0 
};

# Does this library need malloc?
# This pseudo-option will force the memalloc library to be
# required iff the application does not provide it's own
# infrastructure.
#
cdl_option CYGSEM_COMPRESS_ZLIB_NEEDS_MALLOC {
    # This option is not active
    # ActiveIf constraint:  CYGINT_COMPRESS_ZLIB_LOCAL_ALLOC == 0 
    #     CYGINT_COMPRESS_ZLIB_LOCAL_ALLOC == 1
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGPKG_MEMALLOC
    #     CYGPKG_MEMALLOC == current
    #   --> 1
};

# Common memory allocator package build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_COMPRESS_ZLIB_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_COMPRESS_ZLIB_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-D__ECOS__ -DNO_ERRNO_H"
    # value_source default
    # Default value: "-D__ECOS__ -DNO_ERRNO_H"
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_COMPRESS_ZLIB_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -Wstrict-prototypes
    # value_source default
    # Default value: -Wstrict-prototypes
};

# Additional compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_COMPRESS_ZLIB_LDFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_COMPRESS_ZLIB_LDFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# zlib tests
#
cdl_option CYGPKG_COMPRESS_ZLIB_TESTS {
    # Calculated value:  "tests/zlib1.c tests/zlib2.c" 
    # Flavor: data
    # Current_value: tests/zlib1.c tests/zlib2.c
};

# <
# ISO C and POSIX infrastructure
# eCos supports implementations of ISO C libraries and POSIX
# implementations. This package provides infrastructure used by
# all such implementations.
#
cdl_package CYGPKG_ISOINFRA {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGPKG_ISOINFRA
    # package CYGPKG_IO_FLASH
    #     Requires: CYGPKG_ISOINFRA
    # option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY
    #     Requires: CYGPKG_ISOINFRA
    # option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY
    #     DefaultValue:  0 != CYGPKG_ISOINFRA 
    # component CYGPKG_MEMALLOC_MALLOC_ALLOCATORS
    #     ActiveIf: CYGPKG_ISOINFRA
    # package CYGPKG_COMPRESS_ZLIB
    #     Requires: CYGPKG_ISOINFRA
    # package CYGPKG_LIBC_STRING
    #     Requires: CYGPKG_ISOINFRA
};

# >
# Startup and termination
#
cdl_component CYGPKG_ISO_STARTUP {
    # There is no associated value.
};

# >
# main() startup implementations
# Implementations of this interface arrange for a user-supplied
# main() to be called in an ISO compatible environment.
#
cdl_interface CYGINT_ISO_MAIN_STARTUP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MAIN_STARTUP 
    #     CYGINT_ISO_MAIN_STARTUP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MAIN_STARTUP
    #     Requires:  1 >= CYGINT_ISO_MAIN_STARTUP 
};

# environ implementations
# Implementations of this interface provide the environ
# variable required by POSIX.
#
cdl_interface CYGINT_ISO_ENVIRON {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ENVIRON 
    #     CYGINT_ISO_ENVIRON == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ENVIRON
    #     Requires:  1 >= CYGINT_ISO_ENVIRON 
};

# <
# ctype.h functions
#
cdl_component CYGPKG_ISO_CTYPE_H {
    # There is no associated value.
};

# >
# Number of implementations of ctype functions
#
cdl_interface CYGINT_ISO_CTYPE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_CTYPE 
    #     CYGINT_ISO_CTYPE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_CTYPE
    #     Requires:  1 >= CYGINT_ISO_CTYPE 
    # option CYGFUN_LIBC_STRING_BSD_FUNCS
    #     Requires: CYGINT_ISO_CTYPE
};

# Ctype implementation header
#
cdl_option CYGBLD_ISO_CTYPE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Error handling
#
cdl_component CYGPKG_ISO_ERRNO {
    # There is no associated value.
};

# >
# Number of implementations of error codes
#
cdl_interface CYGINT_ISO_ERRNO_CODES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ERRNO_CODES 
    #     CYGINT_ISO_ERRNO_CODES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ERRNO_CODES
    #     Requires:  1 >= CYGINT_ISO_ERRNO_CODES 
};

# Error codes implementation header
#
cdl_option CYGBLD_ISO_ERRNO_CODES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/error/codes.h>
    # value_source inferred
    # Default value: 0 0
};

# Number of implementations of errno variable
#
cdl_interface CYGINT_ISO_ERRNO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ERRNO 
    #     CYGINT_ISO_ERRNO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ERRNO
    #     Requires:  1 >= CYGINT_ISO_ERRNO 
};

# errno variable implementation header
#
cdl_option CYGBLD_ISO_ERRNO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/error/errno.h>
    # value_source inferred
    # Default value: 0 0
};

# <
# Locale-related functions
#
cdl_component CYGPKG_ISO_LOCALE {
    # There is no associated value.
};

# >
# Number of implementations of locale functions
#
cdl_interface CYGINT_ISO_LOCALE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_LOCALE 
    #     CYGINT_ISO_LOCALE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_LOCALE
    #     Requires:  1 >= CYGINT_ISO_LOCALE 
};

# Locale implementation header
#
cdl_option CYGBLD_ISO_LOCALE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Standard I/O-related functionality
#
cdl_component CYGPKG_ISO_STDIO {
    # There is no associated value.
};

# >
# Number of implementations of stdio file types
#
cdl_interface CYGINT_ISO_STDIO_FILETYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILETYPES 
    #     CYGINT_ISO_STDIO_FILETYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILETYPES
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILETYPES 
};

# Stdio file types implementation header
#
cdl_option CYGBLD_ISO_STDIO_FILETYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Stdio standard streams implementations
#
cdl_interface CYGINT_ISO_STDIO_STREAMS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_STREAMS 
    #     CYGINT_ISO_STDIO_STREAMS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_STREAMS
    #     Requires:  1 >= CYGINT_ISO_STDIO_STREAMS 
};

# Stdio standard streams implementation header
# This header file must define stdin, stdout
# and stderr.
#
cdl_option CYGBLD_ISO_STDIO_STREAMS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file operations
#
cdl_interface CYGINT_ISO_STDIO_FILEOPS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEOPS 
    #     CYGINT_ISO_STDIO_FILEOPS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEOPS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEOPS 
};

# Stdio file operations implementation header
# This header controls the file system operations on a file
# such as remove(), rename(), tmpfile(), tmpnam() and associated
# constants.
#
cdl_option CYGBLD_ISO_STDIO_FILEOPS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file access  functionals
#
cdl_interface CYGINT_ISO_STDIO_FILEACCESS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEACCESS 
    #     CYGINT_ISO_STDIO_FILEACCESS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEACCESS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEACCESS 
};

# Stdio file access implementation header
# This header controls the file access operations
# such as fclose(), fflush(), fopen(), freopen(), setbuf(),
# setvbuf(), and associated constants.
#
cdl_option CYGBLD_ISO_STDIO_FILEACCESS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio formatted I/O
#
cdl_interface CYGINT_ISO_STDIO_FORMATTED_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FORMATTED_IO 
    #     CYGINT_ISO_STDIO_FORMATTED_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FORMATTED_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_FORMATTED_IO 
};

# Stdio formatted I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_FORMATTED_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio character I/O
#
cdl_interface CYGINT_ISO_STDIO_CHAR_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_CHAR_IO 
    #     CYGINT_ISO_STDIO_CHAR_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_CHAR_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_CHAR_IO 
};

# Stdio character I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_CHAR_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio direct I/O
#
cdl_interface CYGINT_ISO_STDIO_DIRECT_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_DIRECT_IO 
    #     CYGINT_ISO_STDIO_DIRECT_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_DIRECT_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_DIRECT_IO 
};

# Stdio direct I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_DIRECT_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file positioning
#
cdl_interface CYGINT_ISO_STDIO_FILEPOS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEPOS 
    #     CYGINT_ISO_STDIO_FILEPOS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEPOS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEPOS 
};

# Stdio file positioning implementation header
#
cdl_option CYGBLD_ISO_STDIO_FILEPOS {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio error handling
#
cdl_interface CYGINT_ISO_STDIO_ERROR {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_ERROR 
    #     CYGINT_ISO_STDIO_ERROR == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_ERROR
    #     Requires:  1 >= CYGINT_ISO_STDIO_ERROR 
};

# Stdio error handling implementation header
#
cdl_option CYGBLD_ISO_STDIO_ERROR_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX fd-related function implementations
#
cdl_interface CYGINT_ISO_STDIO_POSIX_FDFUNCS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >=  CYGINT_ISO_STDIO_POSIX_FDFUNCS 
    #     CYGINT_ISO_STDIO_POSIX_FDFUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_POSIX_FDFUNCS
    #     Requires:  1 >=  CYGINT_ISO_STDIO_POSIX_FDFUNCS 
};

# POSIX fd-related function implementation header
#
cdl_option CYGBLD_ISO_STDIO_POSIX_FDFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Standard general utility functions
#
cdl_component CYGPKG_ISO_STDLIB {
    # There is no associated value.
};

# >
# String conversion function implementations
#
cdl_interface CYGINT_ISO_STDLIB_STRCONV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV 
    #     CYGINT_ISO_STDLIB_STRCONV == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_STRCONV
    #     Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV 
};

# String conversion function implementation header
#
cdl_option CYGBLD_ISO_STDLIB_STRCONV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# String to FP conversion function implementations
#
cdl_interface CYGINT_ISO_STDLIB_STRCONV_FLOAT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV_FLOAT 
    #     CYGINT_ISO_STDLIB_STRCONV_FLOAT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_STRCONV_FLOAT
    #     Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV_FLOAT 
};

# String to FP conversion function implementation header
#
cdl_option CYGBLD_ISO_STDLIB_STRCONV_FLOAT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Random number generator implementations
#
cdl_interface CYGINT_ISO_RAND {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_RAND 
    #     CYGINT_ISO_RAND == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_RAND
    #     Requires:  1 >= CYGINT_ISO_RAND 
};

# Random number generator implementation header
#
cdl_option CYGBLD_ISO_RAND_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Malloc implementations
#
cdl_interface CYGINT_ISO_MALLOC {
    # Implemented by CYGPKG_MEMALLOC_MALLOC_ALLOCATORS, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_MALLOC 
    #     CYGINT_ISO_MALLOC == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MALLOC
    #     Requires:  1 >= CYGINT_ISO_MALLOC 
};

# Malloc implementation header
#
cdl_option CYGBLD_ISO_MALLOC_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Mallinfo() implementations
#
cdl_interface CYGINT_ISO_MALLINFO {
    # Implemented by CYGPKG_MEMALLOC_MALLOC_ALLOCATORS, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_MALLINFO 
    #     CYGINT_ISO_MALLINFO == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MALLINFO
    #     Requires:  1 >= CYGINT_ISO_MALLINFO 
};

# Mallinfo() implementation header
#
cdl_option CYGBLD_ISO_MALLINFO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Program exit functionality implementations
#
cdl_interface CYGINT_ISO_EXIT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_EXIT 
    #     CYGINT_ISO_EXIT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_EXIT
    #     Requires:  1 >= CYGINT_ISO_EXIT 
};

# Program exit functionality implementation header
#
cdl_option CYGBLD_ISO_EXIT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Program environment implementations
#
cdl_interface CYGINT_ISO_STDLIB_ENVIRON {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_ENVIRON 
    #     CYGINT_ISO_STDLIB_ENVIRON == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_ENVIRON
    #     Requires:  1 >= CYGINT_ISO_STDLIB_ENVIRON 
};

# Program environment implementation header
#
cdl_option CYGBLD_ISO_STDLIB_ENVIRON_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# system() implementations
#
cdl_interface CYGINT_ISO_STDLIB_SYSTEM {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_SYSTEM 
    #     CYGINT_ISO_STDLIB_SYSTEM == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_SYSTEM
    #     Requires:  1 >= CYGINT_ISO_STDLIB_SYSTEM 
};

# system() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_SYSTEM_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# bsearch() implementations
#
cdl_interface CYGINT_ISO_BSEARCH {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_BSEARCH 
    #     CYGINT_ISO_BSEARCH == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_BSEARCH
    #     Requires:  1 >= CYGINT_ISO_BSEARCH 
};

# bsearch() implementation header
#
cdl_option CYGBLD_ISO_BSEARCH_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# qsort() implementations
#
cdl_interface CYGINT_ISO_QSORT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_QSORT 
    #     CYGINT_ISO_STDLIB_QSORT (unknown) == 0
    #   --> 1
};

# qsort() implementation header
#
cdl_option CYGBLD_ISO_QSORT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# abs()/labs() implementations
#
cdl_interface CYGINT_ISO_ABS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_ABS 
    #     CYGINT_ISO_STDLIB_ABS (unknown) == 0
    #   --> 1
};

# abs()/labs() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_ABS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# div()/ldiv() implementations
#
cdl_interface CYGINT_ISO_DIV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_DIV 
    #     CYGINT_ISO_STDLIB_DIV (unknown) == 0
    #   --> 1
};

# div()/ldiv() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_DIV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Header defining the implementation's MB_CUR_MAX
#
cdl_option CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Multibyte character implementations
#
cdl_interface CYGINT_ISO_STDLIB_MULTIBYTE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_MULTIBYTE 
    #     CYGINT_ISO_STDLIB_MULTIBYTE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_MULTIBYTE
    #     Requires:  1 >= CYGINT_ISO_STDLIB_MULTIBYTE 
};

# Multibyte character implementation header
#
cdl_option CYGBLD_ISO_STDLIB_MULTIBYTE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# String functions
#
cdl_component CYGPKG_ISO_STRING {
    # There is no associated value.
};

# >
# Number of implementations of strerror() function
#
cdl_interface CYGINT_ISO_STRERROR {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STRERROR 
    #     CYGINT_ISO_STRERROR == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRERROR
    #     Requires:  1 >= CYGINT_ISO_STRERROR 
};

# strerror() implementation header
#
cdl_option CYGBLD_ISO_STRERROR_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/error/strerror.h>
    # value_source inferred
    # Default value: 0 0
};

# memcpy() implementation header
#
cdl_option CYGBLD_ISO_MEMCPY_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# memset() implementation header
#
cdl_option CYGBLD_ISO_MEMSET_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of strtok_r() function
#
cdl_interface CYGINT_ISO_STRTOK_R {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRTOK_R 
    #     CYGINT_ISO_STRTOK_R == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRTOK_R
    #     Requires:  1 >= CYGINT_ISO_STRTOK_R 
};

# strtok_r() implementation header
#
cdl_option CYGBLD_ISO_STRTOK_R_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRTOK_R_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of locale-specific string  functions
# This covers locale-dependent string functions such as strcoll()
# and strxfrm().
#
cdl_interface CYGINT_ISO_STRING_LOCALE_FUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_LOCALE_FUNCS 
    #     CYGINT_ISO_STRING_LOCALE_FUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_LOCALE_FUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_LOCALE_FUNCS 
};

# Locale-specific string functions' implementation  header
# This covers locale-dependent string functions such as strcoll()
# and strxfrm().
#
cdl_option CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of BSD string functions
#
cdl_interface CYGINT_ISO_STRING_BSD_FUNCS {
    # Implemented by CYGFUN_LIBC_STRING_BSD_FUNCS, active, disabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STRING_BSD_FUNCS 
    #     CYGINT_ISO_STRING_BSD_FUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_BSD_FUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_BSD_FUNCS 
};

# BSD string functions' implementation header
#
cdl_option CYGBLD_ISO_STRING_BSD_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/bsdstring.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGFUN_LIBC_STRING_BSD_FUNCS
    #     Requires:  CYGBLD_ISO_STRING_BSD_FUNCS_HEADER ==  "<cyg/libc/string/bsdstring.h>" 
};

# Number of implementations of other mem*() functions
#
cdl_interface CYGINT_ISO_STRING_MEMFUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_MEMFUNCS 
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_MEMFUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_MEMFUNCS 
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGINT_ISO_STRING_MEMFUNCS
};

# Other mem*() functions' implementation header
#
cdl_option CYGBLD_ISO_STRING_MEMFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_MEMFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of other ISO C str*()  functions
# This covers the other str*() functions defined by ISO C.
#
cdl_interface CYGINT_ISO_STRING_STRFUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_STRFUNCS 
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_STRFUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_STRFUNCS 
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGINT_ISO_STRING_STRFUNCS
    # package CYGPKG_IO_FLASH
    #     Requires: CYGINT_ISO_STRING_STRFUNCS
};

# Other ISO C str*() functions' implementation  header
# This covers the other str*() functions defined by ISO C.
#
cdl_option CYGBLD_ISO_STRING_STRFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_STRFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# <
# Clock and time functionality
#
cdl_component CYGPKG_ISO_TIME {
    # There is no associated value.
};

# >
# time_t implementation header
#
cdl_option CYGBLD_ISO_TIME_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# clock_t implementation header
#
cdl_option CYGBLD_ISO_CLOCK_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# struct timeval implementation header
#
cdl_option CYGBLD_ISO_STRUCTTIMEVAL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX timer types
#
cdl_interface CYGINT_ISO_POSIX_TIMER_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMER_TYPES 
    #     CYGINT_ISO_POSIX_TIMER_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMER_TYPES
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMER_TYPES 
};

# POSIX timer types implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMER_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX clock types
#
cdl_interface CYGINT_ISO_POSIX_CLOCK_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_CLOCK_TYPES 
    #     CYGINT_ISO_POSIX_CLOCK_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_CLOCK_TYPES
    #     Requires:  1 >= CYGINT_ISO_POSIX_CLOCK_TYPES 
};

# POSIX clock types implementation header
#
cdl_option CYGBLD_ISO_POSIX_CLOCK_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of ISO C types
#
cdl_interface CYGINT_ISO_C_TIME_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_C_TIME_TYPES 
    #     CYGINT_ISO_C_TIME_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_C_TIME_TYPES
    #     Requires:  1 >= CYGINT_ISO_C_TIME_TYPES 
};

# ISO C time types implementation header
#
cdl_option CYGBLD_ISO_C_TIME_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX timers
#
cdl_interface CYGINT_ISO_POSIX_TIMERS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMERS 
    #     CYGINT_ISO_POSIX_TIMERS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMERS
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMERS 
};

# POSIX timer implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMERS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX clocks
#
cdl_interface CYGINT_ISO_POSIX_CLOCKS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_CLOCKS 
    #     CYGINT_ISO_POSIX_CLOCKS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_CLOCKS
    #     Requires:  1 >= CYGINT_ISO_POSIX_CLOCKS 
};

# POSIX clocks implementation header
#
cdl_option CYGBLD_ISO_POSIX_CLOCKS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of ISO C clock functions
#
cdl_interface CYGINT_ISO_C_CLOCK_FUNCS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_C_CLOCK_FUNCS 
    #     CYGINT_ISO_C_CLOCK_FUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_C_CLOCK_FUNCS
    #     Requires:  1 >= CYGINT_ISO_C_CLOCK_FUNCS 
};

# ISO C clock functions' implementation header
#
cdl_option CYGBLD_ISO_C_CLOCK_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of tzset() function
#
cdl_interface CYGINT_ISO_TZSET {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_TZSET 
    #     CYGINT_ISO_TZSET == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_TZSET
    #     Requires:  1 >= CYGINT_ISO_TZSET 
};

# tzset() implementation header
#
cdl_option CYGBLD_ISO_TZSET_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Signal functionality
#
cdl_component CYGPKG_ISO_SIGNAL {
    # There is no associated value.
};

# >
# Number of implementations of signal numbers
#
cdl_interface CYGINT_ISO_SIGNAL_NUMBERS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGNAL_NUMBERS 
    #     CYGINT_ISO_SIGNAL_NUMBERS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGNAL_NUMBERS
    #     Requires:  1 >= CYGINT_ISO_SIGNAL_NUMBERS 
};

# Signal numbering implementation header
# This header provides the mapping of signal
# names (e.g. SIGBUS) to numbers.
#
cdl_option CYGBLD_ISO_SIGNAL_NUMBERS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of signal implementations
#
cdl_interface CYGINT_ISO_SIGNAL_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGNAL_IMPL 
    #     CYGINT_ISO_SIGNAL_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGNAL_IMPL
    #     Requires:  1 >= CYGINT_ISO_SIGNAL_IMPL 
};

# Signals implementation header
#
cdl_option CYGBLD_ISO_SIGNAL_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX real time signals feature test macro
# This defines the POSIX feature test macro
# that indicates that the POSIX real time signals
# are present.
#
cdl_interface CYGINT_POSIX_REALTIME_SIGNALS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_POSIX_REALTIME_SIGNALS 
    #     CYGINT_POSIX_REALTIME_SIGNALS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_POSIX_REALTIME_SIGNALS
    #     Requires:  1 >= CYGINT_POSIX_REALTIME_SIGNALS 
};

# <
# Non-local jumps functionality
#
cdl_component CYGPKG_ISO_SETJMP {
    # There is no associated value.
};

# >
# setjmp() / longjmp() implementations
#
cdl_interface CYGINT_ISO_SETJMP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SETJMP 
    #     CYGINT_ISO_SETJMP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SETJMP
    #     Requires:  1 >= CYGINT_ISO_SETJMP 
};

# setjmp() / longjmp() implementation header
#
cdl_option CYGBLD_ISO_SETJMP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# sigsetjmp() / siglongjmp() implementations
#
cdl_interface CYGINT_ISO_SIGSETJMP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGSETJMP 
    #     CYGINT_ISO_SIGSETJMP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGSETJMP
    #     Requires:  1 >= CYGINT_ISO_SIGSETJMP 
};

# sigsetjmp() / siglongjmp() implementation header
#
cdl_option CYGBLD_ISO_SIGSETJMP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Assertions implementation header
#
cdl_option CYGBLD_ISO_ASSERT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX file control
# This covers the POSIX file control definitions,
# normally found in <fcntl.h>
#
cdl_component CYGPKG_ISO_POSIX_FCNTL {
    # There is no associated value.
};

# >
# POSIX open flags implementation header
#
cdl_option CYGBLD_ISO_OFLAG_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX fcntl() implementations
#
cdl_interface CYGINT_ISO_FCNTL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_FCNTL 
    #     CYGINT_ISO_FCNTL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_FCNTL
    #     Requires:  1 >= CYGINT_ISO_FCNTL 
};

# POSIX fcntl() implementation header
#
cdl_option CYGBLD_ISO_FCNTL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX file open implementations
#
cdl_interface CYGINT_ISO_OPEN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_OPEN 
    #     CYGINT_ISO_OPEN == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_OPEN
    #     Requires:  1 >= CYGINT_ISO_OPEN 
};

# POSIX file open implementation header
#
cdl_option CYGBLD_ISO_OPEN_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# <sys/stat.h> definitions implementation header
#
cdl_option CYGBLD_ISO_STAT_DEFS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX directory reading implementation
#
cdl_interface CYGINT_ISO_DIRENT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_DIRENT 
    #     CYGINT_ISO_DIRENT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DIRENT
    #     Requires:  1 >= CYGINT_ISO_DIRENT 
};

# <dirent.h> definitions implementation header
#
cdl_option CYGBLD_ISO_DIRENT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX <sys/types.h> contents
# This covers the types required by POSIX to be in
# <sys/types.h>
#
cdl_component CYGPKG_ISO_POSIX_TYPES {
    # There is no associated value.
};

# >
# POSIX thread types implementations
#
cdl_interface CYGINT_ISO_PTHREADTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    #     CYGINT_ISO_PTHREADTYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREADTYPES
    #     Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    # interface CYGINT_ISO_PMUTEXTYPES
    #     Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
};

# POSIX thread types implementation header
#
cdl_option CYGBLD_ISO_PTHREADTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX mutex types implementations
#
cdl_interface CYGINT_ISO_PMUTEXTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    #     CYGINT_ISO_PTHREADTYPES == 0
    #   --> 1
};

# POSIX mutex types implementation header
#
cdl_option CYGBLD_ISO_PMUTEXTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# ssize_t implementation header
#
cdl_option CYGBLD_ISO_SSIZE_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Filesystem types implementation header
#
cdl_option CYGBLD_ISO_FSTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# gid_t, pid_t, uid_t implementation header
#
cdl_option CYGBLD_ISO_SCHEDTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Non-POSIX <sys/types.h> contents
# This covers the extra types required by non-POSIX
# packages to be in <sys/types.h>. These would normally
# only be visible if _POSIX_SOURCE is not defined.
#
cdl_component CYGPKG_ISO_EXTRA_TYPES {
    # There is no associated value.
};

# >
# BSD compatible types
#
cdl_interface CYGINT_ISO_BSDTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_BSDTYPES 
    #     CYGINT_ISO_BSDTYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_BSDTYPES
    #     Requires:  1 >= CYGINT_ISO_BSDTYPES 
};

# BSD types header
#
cdl_option CYGBLD_ISO_BSDTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Utsname structure
#
cdl_component CYGPKG_ISO_UTSNAME {
    # There is no associated value.
};

# >
# Utsname header
#
cdl_option CYGBLD_ISO_UTSNAME_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX scheduler
#
cdl_component CYGPKG_ISO_SCHED {
    # There is no associated value.
};

# >
# POSIX scheduler implementations
#
cdl_interface CYGINT_ISO_SCHED_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SCHED_IMPL 
    #     CYGINT_ISO_SCHED_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SCHED_IMPL
    #     Requires:  1 >= CYGINT_ISO_SCHED_IMPL 
};

# POSIX scheduler implementation header
#
cdl_option CYGBLD_ISO_SCHED_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX semaphores
#
cdl_component CYGPKG_ISO_SEMAPHORES {
    # There is no associated value.
};

# >
# POSIX semaphore implementations
#
cdl_interface CYGINT_ISO_SEMAPHORES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SEMAPHORES 
    #     CYGINT_ISO_SEMAPHORES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SEMAPHORES
    #     Requires:  1 >= CYGINT_ISO_SEMAPHORES 
};

# POSIX semaphore implementation header
#
cdl_option CYGBLD_ISO_SEMAPHORES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX message queues
#
cdl_component CYGPKG_ISO_MQUEUE {
    # There is no associated value.
};

# >
# Implementations
#
cdl_interface CYGINT_ISO_MQUEUE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MQUEUE 
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MQUEUE
    #     Requires:  1 >= CYGINT_ISO_MQUEUE 
    # option CYGNUM_ISO_MQUEUE_OPEN_MAX
    #     ActiveIf: CYGINT_ISO_MQUEUE
    # option CYGNUM_ISO_MQUEUE_PRIO_MAX
    #     ActiveIf: CYGINT_ISO_MQUEUE
};

# Implementation header
#
cdl_option CYGBLD_ISO_MQUEUE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Maximum number of open message queues
#
cdl_option CYGNUM_ISO_MQUEUE_OPEN_MAX {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MQUEUE
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value:  CYGNUM_POSIX_MQUEUE_OPEN_MAX > 0 ? CYGNUM_POSIX_MQUEUE_OPEN_MAX : 0 
    #     CYGNUM_POSIX_MQUEUE_OPEN_MAX (unknown) == 0
    #     CYGNUM_POSIX_MQUEUE_OPEN_MAX (unknown) == 0
    #   --> 0 0
};

# Maximum number of message priorities
#
cdl_option CYGNUM_ISO_MQUEUE_PRIO_MAX {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MQUEUE
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 65535
    # value_source default
    # Default value: 1 65535
};

# <
# POSIX threads
#
cdl_component CYGPKG_ISO_PTHREAD {
    # There is no associated value.
};

# >
# POSIX pthread implementations
#
cdl_interface CYGINT_ISO_PTHREAD_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_PTHREAD_IMPL 
    #     CYGINT_ISO_PTHREAD_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREAD_IMPL
    #     Requires:  1 >= CYGINT_ISO_PTHREAD_IMPL 
};

# POSIX pthread implementation header
#
cdl_option CYGBLD_ISO_PTHREAD_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX mutex/cond var implementations
#
cdl_interface CYGINT_ISO_PTHREAD_MUTEX {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_PTHREAD_MUTEX 
    #     CYGINT_ISO_PTHREAD_MUTEX == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREAD_MUTEX
    #     Requires:  1 >= CYGINT_ISO_PTHREAD_MUTEX 
};

# POSIX mutex/cond var implementation header
#
cdl_option CYGBLD_ISO_PTHREAD_MUTEX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Limits
#
cdl_component CYGPKG_ISO_LIMITS {
    # There is no associated value.
};

# >
# POSIX pthread limits implementations
#
cdl_interface CYGINT_ISO_POSIX_LIMITS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_POSIX_LIMITS 
    #     CYGINT_ISO_POSIX_LIMITS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_LIMITS
    #     Requires:  1 >= CYGINT_ISO_POSIX_LIMITS 
};

# POSIX pthread limits implementation header
#
cdl_option CYGBLD_ISO_POSIX_LIMITS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# OPEN_MAX implementation header
#
cdl_option CYGBLD_ISO_OPEN_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# LINK_MAX implementation header
#
cdl_option CYGBLD_ISO_LINK_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# NAME_MAX implementation header
#
cdl_option CYGBLD_ISO_NAME_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# PATH_MAX implementation header
#
cdl_option CYGBLD_ISO_PATH_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX termios
#
cdl_component CYGPKG_ISO_TERMIOS {
    # There is no associated value.
};

# >
# POSIX termios implementations
#
cdl_interface CYGINT_ISO_TERMIOS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_TERMIOS 
    #     CYGINT_ISO_TERMIOS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_TERMIOS
    #     Requires:  1 >= CYGINT_ISO_TERMIOS 
};

# POSIX termios implementation header
#
cdl_option CYGBLD_ISO_TERMIOS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Dynamic load API
#
cdl_component CYGPKG_ISO_DLFCN {
    # There is no associated value.
};

# >
# Dynamic load implementations
#
cdl_interface CYGINT_ISO_DLFCN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_DLFCN 
    #     CYGINT_ISO_DLFCN == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DLFCN
    #     Requires:  1 >= CYGINT_ISO_DLFCN 
};

# Dynamic load implementation header
#
cdl_option CYGBLD_ISO_DLFCN_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# UNIX standard functions
#
cdl_component CYGPKG_ISO_UNISTD {
    # There is no associated value.
};

# >
# POSIX timer operations implementations
#
cdl_interface CYGINT_ISO_POSIX_TIMER_OPS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMER_OPS 
    #     CYGINT_ISO_POSIX_TIMER_OPS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMER_OPS
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMER_OPS 
};

# POSIX timer operations implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMER_OPS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX sleep() implementations
#
cdl_interface CYGINT_ISO_POSIX_SLEEP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_SLEEP 
    #     CYGINT_ISO_POSIX_SLEEP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_SLEEP
    #     Requires:  1 >= CYGINT_ISO_POSIX_SLEEP 
};

# POSIX sleep() implementation header
#
cdl_option CYGBLD_ISO_POSIX_SLEEP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# select()/poll() functions
#
cdl_component CYGPKG_ISO_SELECT {
    # There is no associated value.
};

# >
# select() implementations
#
cdl_interface CYGINT_ISO_SELECT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_SELECT 
    #     CYGINT_ISO_SELECT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SELECT
    #     Requires:  1 >= CYGINT_ISO_SELECT 
};

# select() implementation header
#
cdl_option CYGBLD_ISO_SELECT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# poll() implementations
#
cdl_interface CYGINT_ISO_POLL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POLL 
    #     CYGINT_ISO_POLL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POLL
    #     Requires:  1 >= CYGINT_ISO_POLL 
};

# poll() implementation header
#
cdl_option CYGBLD_ISO_POLL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# NetDB utility functions
#
cdl_component CYGPKG_ISO_NETDB {
    # There is no associated value.
};

# >
# DNS implementations
#
cdl_interface CYGINT_ISO_DNS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_DNS 
    #     CYGINT_ISO_DNS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DNS
    #     Requires:  1 >= CYGINT_ISO_DNS 
};

# DNS implementation header
#
cdl_option CYGBLD_ISO_DNS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Protocol network database implementations
#
cdl_interface CYGINT_ISO_NETDB_PROTO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_NETDB_PROTO 
    #     CYGINT_ISO_NETDB_PROTO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_NETDB_PROTO
    #     Requires:  1 >= CYGINT_ISO_NETDB_PROTO 
};

# Protocol network database implementation header
#
cdl_option CYGBLD_ISO_NETDB_PROTO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Services network database implementations
#
cdl_interface CYGINT_ISO_NETDB_SERV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_NETDB_SERV 
    #     CYGINT_ISO_NETDB_SERV == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_NETDB_SERV
    #     Requires:  1 >= CYGINT_ISO_NETDB_SERV 
};

# Services network database implementation header
#
cdl_option CYGBLD_ISO_NETDB_SERV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_ISOINFRA_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the ISO C and POSIX infrastructure package.
# These flags are used in addition to the set of global flags.
#
cdl_option CYGPKG_ISOINFRA_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the ISO C and POSIX infrastructure package.
# These flags are removed from the set of global flags
# if present.
#
cdl_option CYGPKG_ISOINFRA_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# <

